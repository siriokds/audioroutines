	TITLE	D:\Progetti\VisualC\Prova09cdx\Main.cpp
	.386P
include listing.inc
if @Version gt 510
.model FLAT
else
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
_BSS	SEGMENT PARA USE32 PUBLIC 'BSS'
_BSS	ENDS
_TLS	SEGMENT DWORD USE32 PUBLIC 'TLS'
_TLS	ENDS
;	COMDAT ??_C@_09MCGC@Example?55?$AA@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CB@CKNE@could?5not?5create?5the?5main?5window@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CD@BGJB@could?5not?5set?5video?5mode?5640x480@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CC@POJG@Could?5not?5create?5CDXInput?5object@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
;	COMDAT ??_C@_0CC@GECH@Could?5not?5initialize?5application@
_DATA	SEGMENT DWORD USE32 PUBLIC 'DATA'
_DATA	ENDS
CRT$XCA	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCA	ENDS
CRT$XCU	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCU	ENDS
CRT$XCL	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCL	ENDS
CRT$XCC	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCC	ENDS
CRT$XCZ	SEGMENT DWORD USE32 PUBLIC 'DATA'
CRT$XCZ	ENDS
;	COMDAT ??8@YAHABU_GUID@@0@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetBack@CDXScreen@@QAEPAVCDXSurface@@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetHeight@CDXSurface@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetPitch@CDXSurface@@QAEKXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GetSurfaceBytesPointer@CDXSurface@@QAEPAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDXIsoMap@@UAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??1CDXIsoMap@@UAE@XZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E1
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _$E2
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?GeneratePalette@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?FiniApp@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDXInput@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_GCDXScreen@@QAEPAXI@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?WinProc@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?InitApp@@YAHPAUHINSTANCE__@@H@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT _WinMain@16
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DoUpdate@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawSEQ@@YAXHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawQUAD@@YAXHHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawPAT@@YAXHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawPER@@YAXHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawBUF@@YAXPACHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawSMP@@YAXPACHHHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?DrawStress@@YAXXZ
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ?RunOnce@@YAXPACHH@Z
_TEXT	SEGMENT PARA USE32 PUBLIC 'CODE'
_TEXT	ENDS
;	COMDAT ??_7CDXIsoMap@@6B@
CONST	SEGMENT DWORD USE32 PUBLIC 'CONST'
CONST	ENDS
FLAT	GROUP _DATA, CONST, _BSS, CRT$XCA, CRT$XCU, CRT$XCL, CRT$XCC, CRT$XCZ
	ASSUME	CS: FLAT, DS: FLAT, SS: FLAT
endif
PUBLIC	?Modulo@@3PAEA					; Modulo
PUBLIC	?Font4pal@@3PAEA				; Font4pal
PUBLIC	?bActive@@3HA					; bActive
PUBLIC	?Screen@@3PAVCDXScreen@@A			; Screen
PUBLIC	?Input@@3PAVCDXInput@@A				; Input
PUBLIC	?Palette@@3PAUtagPALETTEENTRY@@A		; Palette
PUBLIC	?Wrt@@3VTWriter4@@A				; Wrt
PUBLIC	?Info@@3UtagDataInfo@@A				; Info
PUBLIC	?StressReset@@3HA				; StressReset
PUBLIC	?cpuBench@@3VKTSC@@A				; cpuBench
PUBLIC	?cpuMS@@3MA					; cpuMS
_BSS	SEGMENT
?Screen@@3PAVCDXScreen@@A DD 01H DUP (?)		; Screen
?Input@@3PAVCDXInput@@A DD 01H DUP (?)			; Input
?Palette@@3PAUtagPALETTEENTRY@@A DD 0100H DUP (?)	; Palette
?Wrt@@3VTWriter4@@A DB 020H DUP (?)			; Wrt
?Info@@3UtagDataInfo@@A DB 0ecH DUP (?)			; Info
?StressReset@@3HA DD 01H DUP (?)			; StressReset
?cpuBench@@3VKTSC@@A DQ 01H DUP (?)			; cpuBench
?cpuMS@@3MA DD	01H DUP (?)				; cpuMS
_?wpos@?1??DrawBUF@@YAXPACHHH@Z@4HA DD 01H DUP (?)
_?StxMax@?1??DrawStress@@YAXXZ@4HA DD 01H DUP (?)
_?StxMin@?1??DrawStress@@YAXXZ@4HA DD 01H DUP (?)
_?LastStress@?1??DrawStress@@YAXXZ@4HA DD 01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
?Modulo@@3PAEA DB 046H					; Modulo
	DB	043H
	DB	031H
	DB	036H
	DB	04cH
	DB	00H
	DB	013H
	DB	00H
	DB	0bH
	DB	00H
	DB	0eH
	DB	00H
	DB	050H
	DB	010H
	DB	00H
	DB	00H
	DB	026H
	DB	0bH
	DB	00H
	DB	00H
	DB	040H
	DB	05H
	DB	00H
	DB	00H
	DB	026H
	DB	0bH
	DB	026H
	DB	0bH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	010H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	08H
	DB	010H
	DB	08H
	DB	010H
	DB	010H
	DB	08H
	DB	08H
	DB	010H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	0fbH
	DB	00H
	DB	03H
	DB	0fbH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	0fbH
	DB	00H
	DB	03H
	DB	0fbH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	02H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	0fbH
	DB	00H
	DB	03H
	DB	0fbH
	DB	00H
	DB	02H
	DB	0fbH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	0fbH
	DB	00H
	DB	03H
	DB	0fbH
	DB	00H
	DB	00H
	DB	0fbH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	04H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	02H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0fbH
	DB	00H
	DB	04H
	DB	0fbH
	DB	00H
	DB	03H
	DB	0fbH
	DB	00H
	DB	02H
	DB	0fbH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	0fbH
	DB	00H
	DB	03H
	DB	0fbH
	DB	00H
	DB	00H
	DB	0fbH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	04H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	02H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0fbH
	DB	00H
	DB	04H
	DB	0fbH
	DB	00H
	DB	03H
	DB	0fbH
	DB	00H
	DB	02H
	DB	0fbH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	04H
	DB	0fbH
	DB	00H
	DB	03H
	DB	0fbH
	DB	00H
	DB	00H
	DB	0fbH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0e8H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e8H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e8H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e8H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	07H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0aH
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0bH
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f7H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	07H
	DB	0feH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f4H
	DB	00H
	DB	06H
	DB	0cH
	DB	07H
	DB	0aH
	DB	0cH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f4H
	DB	00H
	DB	06H
	DB	0cH
	DB	07H
	DB	0bH
	DB	0cH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f7H
	DB	00H
	DB	06H
	DB	0aH
	DB	09H
	DB	0cH
	DB	0cH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	07H
	DB	0feH
	DB	00H
	DB	06H
	DB	0aH
	DB	08H
	DB	00H
	DB	0cH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f4H
	DB	00H
	DB	06H
	DB	0cH
	DB	07H
	DB	0aH
	DB	0cH
	DB	01H
	DB	012H
	DB	0cH
	DB	07H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f4H
	DB	00H
	DB	06H
	DB	0cH
	DB	07H
	DB	0bH
	DB	0cH
	DB	01H
	DB	012H
	DB	0cH
	DB	07H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0f7H
	DB	00H
	DB	06H
	DB	0aH
	DB	09H
	DB	0cH
	DB	0cH
	DB	01H
	DB	012H
	DB	0aH
	DB	09H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	07H
	DB	0feH
	DB	00H
	DB	06H
	DB	0aH
	DB	08H
	DB	00H
	DB	0cH
	DB	01H
	DB	012H
	DB	0aH
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	01H
	DB	01H
	DB	03H
	DB	01H
	DB	01H
	DB	07H
	DB	01H
	DB	01H
	DB	0cH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	03H
	DB	01H
	DB	00H
	DB	07H
	DB	01H
	DB	00H
	DB	0cH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0feH
	DB	01H
	DB	01H
	DB	03H
	DB	01H
	DB	01H
	DB	07H
	DB	01H
	DB	01H
	DB	0aH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0feH
	DB	01H
	DB	01H
	DB	02H
	DB	01H
	DB	01H
	DB	05H
	DB	01H
	DB	01H
	DB	0aH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0dH
	DB	00H
	DB	01H
	DB	0dH
	DB	0e8H
	DB	01H
	DB	0dH
	DB	0cH
	DB	01H
	DB	0dH
	DB	0f4H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e8H
	DB	00H
	DB	00H
	DB	0cH
	DB	00H
	DB	00H
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0e8H
	DB	01H
	DB	01H
	DB	0e8H
	DB	01H
	DB	05H
	DB	00H
	DB	00H
	DB	06H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e8H
	DB	01H
	DB	00H
	DB	0e8H
	DB	01H
	DB	05H
	DB	00H
	DB	00H
	DB	06H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e8H
	DB	01H
	DB	00H
	DB	0e8H
	DB	01H
	DB	05H
	DB	00H
	DB	00H
	DB	06H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e8H
	DB	01H
	DB	00H
	DB	0e8H
	DB	01H
	DB	05H
	DB	00H
	DB	00H
	DB	06H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0eH
	DB	00H
	DB	04H
	DB	0eH
	DB	0f4H
	DB	02H
	DB	0eH
	DB	00H
	DB	03H
	DB	0eH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	03H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	02H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	03H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	07H
	DB	0aH
	DB	01H
	DB	03H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	07H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	06H
	DB	0aH
	DB	01H
	DB	02H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	06H
	DB	00H
	DB	00H
	DB	02H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	07H
	DB	0aH
	DB	01H
	DB	03H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	07H
	DB	0aH
	DB	00H
	DB	03H
	DB	00H
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	03H
	DB	0aH
	DB	01H
	DB	00H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	0aH
	DB	01H
	DB	07H
	DB	0aH
	DB	01H
	DB	03H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0aH
	DB	00H
	DB	07H
	DB	00H
	DB	00H
	DB	03H
	DB	00H
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0fbH
	DB	0aH
	DB	01H
	DB	06H
	DB	0aH
	DB	01H
	DB	02H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0aH
	DB	00H
	DB	06H
	DB	00H
	DB	00H
	DB	02H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	0aH
	DB	01H
	DB	07H
	DB	0aH
	DB	01H
	DB	03H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0aH
	DB	00H
	DB	07H
	DB	0aH
	DB	00H
	DB	03H
	DB	00H
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0fbH
	DB	0aH
	DB	01H
	DB	03H
	DB	0aH
	DB	01H
	DB	00H
	DB	0aH
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0aH
	DB	00H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	0f4H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0eH
	DB	00H
	DB	03H
	DB	0eH
	DB	00H
	DB	04H
	DB	0eH
	DB	0f4H
	DB	02H
	DB	0eH
	DB	00H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	024H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	026H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	029H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	022H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	027H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	02bH
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	027H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	024H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	03H
	DB	0cH
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	04H
	DB	00H
	DB	00H
	DB	0cH
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	03H
	DB	00H
	DB	00H
	DB	0cH
	DB	03H
	DB	0cH
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	03H
	DB	0cH
	DB	05H
	DB	011H
	DB	05H
	DB	00H
	DB	00H
	DB	0cH
	DB	04H
	DB	00H
	DB	00H
	DB	013H
	DB	05H
	DB	00H
	DB	00H
	DB	016H
	DB	05H
	DB	00H
	DB	00H
	DB	018H
	DB	05H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	03H
	DB	00H
	DB	00H
	DB	0cH
	DB	05H
	DB	00H
	DB	00H
	DB	0cH
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	04H
	DB	00H
	DB	00H
	DB	0cH
	DB	05H
	DB	00H
	DB	00H
	DB	0cH
	DB	03H
	DB	00H
	DB	00H
	DB	0cH
	DB	05H
	DB	00H
	DB	00H
	DB	0cH
	DB	03H
	DB	00H
	DB	00H
	DB	0cH
	DB	04H
	DB	00H
	DB	00H
	DB	0cH
	DB	03H
	DB	00H
	DB	00H
	DB	0aH
	DB	05H
	DB	00H
	DB	00H
	DB	0cH
	DB	04H
	DB	0cH
	DB	04H
	DB	0cH
	DB	04H
	DB	0cH
	DB	04H
	DB	0cH
	DB	04H
	DB	00H
	DB	00H
	DB	0cH
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	016H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	016H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	016H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	016H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	016H
	DB	02H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01aH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01bH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01dH
	DB	080H
	DB	00H
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	040H
	DB	00H
	DB	00H
	DB	01dH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01bH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01dH
	DB	080H
	DB	00H
	DB	06H
	DB	00H
	DB	040H
	DB	00H
	DB	00H
	DB	01dH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01bH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	016H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	016H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01bH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01dH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	080H
	DB	00H
	DB	024H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0fH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	013H
	DB	00H
	DB	00H
	DB	00H
	DB	013H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	016H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	05H
	DB	00H
	DB	00H
	DB	0cH
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	016H
	DB	05H
	DB	00H
	DB	00H
	DB	018H
	DB	05H
	DB	00H
	DB	00H
	DB	0cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	01H
	DB	00H
	DB	00H
	DB	0cH
	DB	00H
	DB	00H
	DB	00H
	DB	0cH
	DB	01H
	DB	00H
	DB	00H
	DB	0cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	020H
	DB	028H
	DB	030H
	DB	034H
	DB	038H
	DB	03cH
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	02H
	DB	0aH
	DB	03fH
	DB	03aH
	DB	030H
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	03H
	DB	05H
	DB	01H
	DB	01H
	DB	04H
	DB	03fH
	DB	038H
	DB	030H
	DB	028H
	DB	020H
	DB	018H
	DB	08H
	DB	00H
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	06H
	DB	00H
	DB	00H
	DB	00H
	DB	030H
	DB	03fH
	DB	03fH
	DB	00H
	DB	00H
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	07H
	DB	00H
	DB	00H
	DB	00H
	DB	03fH
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	08H
	DB	01H
	DB	02H
	DB	00H
	DB	03fH
	DB	030H
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	09H
	DB	01H
	DB	01H
	DB	00H
	DB	020H
	DB	030H
	DB	028H
	DB	020H
	DB	018H
	DB	010H
	DB	00H
	DB	0e1H
	DB	08H
	DB	00H
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0aH
	DB	01H
	DB	01H
	DB	00H
	DB	030H
	DB	02cH
	DB	028H
	DB	024H
	DB	020H
	DB	01cH
	DB	018H
	DB	014H
	DB	010H
	DB	0cH
	DB	08H
	DB	04H
	DB	00H
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0bH
	DB	01H
	DB	01H
	DB	00H
	DB	030H
	DB	02cH
	DB	028H
	DB	024H
	DB	020H
	DB	01cH
	DB	018H
	DB	014H
	DB	010H
	DB	0cH
	DB	08H
	DB	04H
	DB	00H
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	0cH
	DB	01H
	DB	01H
	DB	00H
	DB	030H
	DB	02cH
	DB	028H
	DB	024H
	DB	020H
	DB	01cH
	DB	018H
	DB	014H
	DB	010H
	DB	0cH
	DB	08H
	DB	04H
	DB	00H
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	05H
	DB	0dH
	DB	01H
	DB	02H
	DB	0aH
	DB	00H
	DB	04H
	DB	08H
	DB	0cH
	DB	010H
	DB	014H
	DB	018H
	DB	01cH
	DB	020H
	DB	024H
	DB	028H
	DB	02cH
	DB	030H
	DB	02fH
	DB	02dH
	DB	02cH
	DB	02bH
	DB	02aH
	DB	029H
	DB	028H
	DB	027H
	DB	026H
	DB	025H
	DB	024H
	DB	023H
	DB	022H
	DB	021H
	DB	020H
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e2H
	DB	029H
	DB	00H
	DB	03H
	DB	07H
	DB	0cH
	DB	0e0H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e2H
	DB	029H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	028H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	027H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	026H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	025H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	024H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	023H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	022H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e7H
	DB	02H
	DB	0e4H
	DB	021H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	020H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	01fH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	01eH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	01dH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	01cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	01bH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	01aH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e7H
	DB	03H
	DB	0e4H
	DB	01aH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	01bH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	01cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	01dH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	01eH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	01fH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	020H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	021H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e7H
	DB	04H
	DB	0e4H
	DB	022H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	023H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	024H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	025H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	026H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	027H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	028H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e4H
	DB	029H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e7H
	DB	01H
	DB	0e2H
	DB	021H
	DB	00H
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e2H
	DB	00H
	DB	0a0H
	DB	0e4H
	DB	022H
	DB	090H
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e2H
	DB	00H
	DB	0a7H
	DB	0a6H
	DB	0a5H
	DB	0a4H
	DB	0a3H
	DB	0a2H
	DB	0a1H
	DB	0a0H
	DB	09fH
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e2H
	DB	020H
	DB	00H
	DB	0e4H
	DB	01bH
	DB	00H
	DB	0e4H
	DB	01bH
	DB	00H
	DB	0e0H
	DB	03H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e2H
	DB	00H
	DB	0b5H
	DB	0e2H
	DB	029H
	DB	00H
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e2H
	DB	021H
	DB	00H
	DB	03H
	DB	07H
	DB	0e0H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e2H
	DB	021H
	DB	00H
	DB	04H
	DB	07H
	DB	0e0H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e2H
	DB	021H
	DB	00H
	DB	05H
	DB	09H
	DB	0e0H
	DB	02H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0e2H
	DB	01fH
	DB	00H
	DB	0e1H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	0f8H
	DB	0fbH
	DB	0f7H
	DB	0f5H
	DB	0f6H
	DB	0f6H
	DB	0f6H
	DB	0f3H
	DB	0efH
	DB	0f1H
	DB	0f4H
	DB	0efH
	DB	0edH
	DB	0ecH
	DB	0f0H
	DB	0efH
	DB	0ebH
	DB	0e8H
	DB	0e9H
	DB	0e6H
	DB	0ddH
	DB	0d9H
	DB	0e1H
	DB	0f1H
	DB	0fbH
	DB	0fbH
	DB	0e4H
	DB	0ccH
	DB	0b8H
	DB	0b7H
	DB	0cfH
	DB	0f3H
	DB	00H
	DB	0d0H
	DB	080H
	DB	080H
	DB	080H
	DB	09fH
	DB	02fH
	DB	06bH
	DB	058H
	DB	08H
	DB	098H
	DB	080H
	DB	083H
	DB	0bfH
	DB	0ebH
	DB	0f7H
	DB	017H
	DB	037H
	DB	039H
	DB	00H
	DB	090H
	DB	080H
	DB	080H
	DB	0dfH
	DB	07fH
	DB	075H
	DB	074H
	DB	040H
	DB	080H
	DB	080H
	DB	08fH
	DB	07fH
	DB	078H
	DB	074H
	DB	060H
	DB	0d0H
	DB	080H
	DB	083H
	DB	0d7H
	DB	037H
	DB	05fH
	DB	055H
	DB	038H
	DB	00H
	DB	0a0H
	DB	080H
	DB	080H
	DB	080H
	DB	0cfH
	DB	0f5H
	DB	0c0H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	083H
	DB	0b7H
	DB	0b6H
	DB	0a3H
	DB	0afH
	DB	0dfH
	DB	017H
	DB	04fH
	DB	064H
	DB	066H
	DB	071H
	DB	070H
	DB	06eH
	DB	06eH
	DB	06eH
	DB	06eH
	DB	06eH
	DB	06eH
	DB	06eH
	DB	06eH
	DB	06eH
	DB	06dH
	DB	06dH
	DB	06dH
	DB	06dH
	DB	06dH
	DB	06dH
	DB	06dH
	DB	06dH
	DB	06dH
	DB	06dH
	DB	06cH
	DB	06cH
	DB	06cH
	DB	06cH
	DB	06cH
	DB	06cH
	DB	06cH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	058H
	DB	067H
	DB	06dH
	DB	06bH
	DB	06aH
	DB	06aH
	DB	030H
	DB	0d0H
	DB	099H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	09fH
	DB	0ffH
	DB	037H
	DB	028H
	DB	04H
	DB	013H
	DB	06fH
	DB	07aH
	DB	072H
	DB	06dH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06aH
	DB	06aH
	DB	06aH
	DB	069H
	DB	069H
	DB	069H
	DB	06aH
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	068H
	DB	068H
	DB	068H
	DB	028H
	DB	00H
	DB	0f0H
	DB	0e0H
	DB	0b0H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	097H
	DB	0dbH
	DB	0dH
	DB	027H
	DB	033H
	DB	054H
	DB	048H
	DB	010H
	DB	0fH
	DB	07fH
	DB	079H
	DB	072H
	DB	06eH
	DB	06cH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06aH
	DB	06aH
	DB	06aH
	DB	06aH
	DB	06aH
	DB	06aH
	DB	06aH
	DB	06aH
	DB	06aH
	DB	06aH
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	069H
	DB	0c0H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	0bfH
	DB	017H
	DB	08H
	DB	0c0H
	DB	080H
	DB	080H
	DB	080H
	DB	09fH
	DB	03fH
	DB	07fH
	DB	07fH
	DB	07bH
	DB	074H
	DB	070H
	DB	059H
	DB	071H
	DB	06eH
	DB	06dH
	DB	06cH
	DB	06cH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	04bH
	DB	070H
	DB	06dH
	DB	06cH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	06aH
	DB	06aH
	DB	058H
	DB	04bH
	DB	06fH
	DB	06dH
	DB	06bH
	DB	030H
	DB	0f6H
	DB	0b0H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	0efH
	DB	018H
	DB	0d0H
	DB	09cH
	DB	098H
	DB	09fH
	DB	0cfH
	DB	05fH
	DB	07fH
	DB	07fH
	DB	060H
	DB	00H
	DB	080H
	DB	08fH
	DB	02fH
	DB	07fH
	DB	07eH
	DB	076H
	DB	071H
	DB	040H
	DB	0efH
	DB	07fH
	DB	077H
	DB	071H
	DB	06fH
	DB	06dH
	DB	06dH
	DB	060H
	DB	06eH
	DB	06dH
	DB	06cH
	DB	06cH
	DB	06cH
	DB	06bH
	DB	06bH
	DB	069H
	DB	06cH
	DB	06cH
	DB	06bH
	DB	06bH
	DB	06bH
	DB	028H
	DB	0cbH
	DB	01fH
	DB	07cH
	DB	074H
	DB	00H
	DB	080H
	DB	080H
	DB	087H
	DB	0d3H
	DB	0c0H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	0a7H
	DB	0a0H
	DB	080H
	DB	080H
	DB	09fH
	DB	084H
	DB	080H
	DB	080H
	DB	08fH
	DB	0a0H
	DB	080H
	DB	08fH
	DB	05fH
	DB	07fH
	DB	040H
	DB	080H
	DB	080H
	DB	087H
	DB	05fH
	DB	07fH
	DB	07fH
	DB	078H
	DB	073H
	DB	048H
	DB	0c0H
	DB	080H
	DB	0bfH
	DB	07fH
	DB	07eH
	DB	076H
	DB	070H
	DB	028H
	DB	04bH
	DB	044H
	DB	047H
	DB	077H
	DB	071H
	DB	06fH
	DB	06dH
	DB	040H
	DB	0c4H
	DB	0f7H
	DB	07fH
	DB	075H
	DB	070H
	DB	06eH
	DB	010H
	DB	0cfH
	DB	06fH
	DB	076H
	DB	071H
	DB	068H
	DB	03dH
	DB	06fH
	DB	070H
	DB	06dH
	DB	040H
	DB	0a0H
	DB	087H
	DB	0dfH
	DB	037H
	DB	054H
	DB	024H
	DB	0c0H
	DB	080H
	DB	080H
	DB	080H
	DB	09fH
	DB	0cfH
	DB	0a8H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	0d3H
	DB	0a4H
	DB	080H
	DB	080H
	DB	080H
	DB	0dfH
	DB	06bH
	DB	068H
	DB	028H
	DB	080H
	DB	080H
	DB	080H
	DB	0bfH
	DB	07fH
	DB	07fH
	DB	060H
	DB	0e0H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	07cH
	DB	075H
	DB	071H
	DB	06fH
	DB	030H
	DB	090H
	DB	09fH
	DB	05fH
	DB	07dH
	DB	075H
	DB	071H
	DB	028H
	DB	0bH
	DB	05bH
	DB	076H
	DB	071H
	DB	06fH
	DB	06eH
	DB	06dH
	DB	04cH
	DB	037H
	DB	075H
	DB	071H
	DB	06eH
	DB	06dH
	DB	028H
	DB	0ddH
	DB	03fH
	DB	078H
	DB	072H
	DB	06fH
	DB	06dH
	DB	020H
	DB	0b0H
	DB	0dfH
	DB	06fH
	DB	078H
	DB	072H
	DB	048H
	DB	00H
	DB	0c0H
	DB	090H
	DB	080H
	DB	083H
	DB	0d7H
	DB	0cH
	DB	0e0H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	08fH
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	0d7H
	DB	024H
	DB	0c0H
	DB	080H
	DB	080H
	DB	080H
	DB	0f7H
	DB	07fH
	DB	050H
	DB	0f0H
	DB	080H
	DB	080H
	DB	097H
	DB	03fH
	DB	07fH
	DB	064H
	DB	0e0H
	DB	080H
	DB	080H
	DB	08fH
	DB	07fH
	DB	07fH
	DB	07aH
	DB	020H
	DB	080H
	DB	087H
	DB	0ffH
	DB	037H
	DB	07fH
	DB	078H
	DB	073H
	DB	040H
	DB	090H
	DB	080H
	DB	0f7H
	DB	07fH
	DB	07aH
	DB	074H
	DB	048H
	DB	0d0H
	DB	080H
	DB	0f7H
	DB	07fH
	DB	078H
	DB	072H
	DB	040H
	DB	080H
	DB	080H
	DB	03fH
	DB	07fH
	DB	078H
	DB	072H
	DB	020H
	DB	0a4H
	DB	0f7H
	DB	07fH
	DB	076H
	DB	058H
	DB	020H
	DB	033H
	DB	05bH
	DB	076H
	DB	070H
	DB	05cH
	DB	071H
	DB	06fH
	DB	040H
	DB	0c0H
	DB	087H
	DB	0efH
	DB	05bH
	DB	06aH
	DB	050H
	DB	00H
	DB	0a0H
	DB	080H
	DB	080H
	DB	09fH
	DB	01fH
	DB	07aH
	DB	050H
	DB	0a0H
	DB	080H
	DB	080H
	DB	080H
	DB	0d7H
	DB	0f0H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	0b7H
	DB	088H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	0bfH
	DB	01fH
	DB	0f0H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	0ffH
	DB	06aH
	DB	030H
	DB	0c0H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	07fH
	DB	07fH
	DB	07cH
	DB	0e0H
	DB	080H
	DB	080H
	DB	080H
	DB	03fH
	DB	07fH
	DB	07aH
	DB	00H
	DB	080H
	DB	080H
	DB	080H
	DB	0f7H
	DB	07fH
	DB	07cH
	DB	060H
	DB	080H
	DB	080H
	DB	08fH
	DB	03fH
	DB	07eH
	DB	07aH
	DB	070H
	DB	050H
	DB	0e0H
	DB	080H
	DB	083H
	DB	05fH
	DB	07fH
	DB	076H
	DB	020H
	DB	0c0H
	DB	0bfH
	DB	0ffH
	DB	07fH
	DB	068H
	DB	063H
	DB	064H
	DB	044H
	DB	00H
	DB	01fH
	DB	077H
	DB	074H
	DB	040H
	DB	0a0H
	DB	08fH
	DB	07fH
	DB	07cH
	DB	074H
	DB	020H
	DB	080H
	DB	09fH
	DB	05fH
	DB	07cH
	DB	074H
	DB	048H
	DB	027H
	DB	06dH
	DB	074H
	DB	040H
	DB	088H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	076H
	DB	068H
	DB	0a0H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	060H
	DB	08H
	DB	0e0H
	DB	0c6H
	DB	0bbH
	DB	0efH
	DB	04bH
	DB	079H
	DB	050H
	DB	0c0H
	DB	080H
	DB	080H
	DB	0afH
	DB	0ffH
	DB	01aH
	DB	00H
	DB	0caH
	DB	0afH
	DB	0bbH
	DB	0c8H
	DB	0aaH
	DB	08cH
	DB	080H
	DB	080H
	DB	0bfH
	DB	0ffH
	DB	0c0H
	DB	080H
	DB	080H
	DB	080H
	DB	097H
	DB	0efH
	DB	0e0H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	083H
	DB	0ffH
	DB	030H
	DB	0a0H
	DB	080H
	DB	080H
	DB	080H
	DB	0bfH
	DB	0a8H
	DB	080H
	DB	080H
	DB	080H
	DB	0bfH
	DB	012H
	DB	0c0H
	DB	080H
	DB	085H
	DB	09fH
	DB	0b8H
	DB	0bdH
	DB	0a0H
	DB	080H
	DB	080H
	DB	08fH
	DB	0dfH
	DB	037H
	DB	040H
	DB	0c0H
	DB	080H
	DB	080H
	DB	08fH
	DB	02fH
	DB	06dH
	DB	058H
	DB	00H
	DB	0c6H
	DB	0e9H
	DB	0a0H
	DB	080H
	DB	08fH
	DB	02fH
	DB	07fH
	DB	068H
	DB	020H
	DB	0c0H
	DB	08fH
	DB	0ffH
	DB	08H
	DB	0efH
	DB	05fH
	DB	074H
	DB	04aH
	DB	08H
	DB	0cdH
	DB	0ffH
	DB	05bH
	DB	07cH
	DB	068H
	DB	0e0H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	079H
	DB	040H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	074H
	DB	010H
	DB	0efH
	DB	037H
	DB	07fH
	DB	074H
	DB	020H
	DB	080H
	DB	080H
	DB	081H
	DB	07fH
	DB	07fH
	DB	078H
	DB	00H
	DB	080H
	DB	083H
	DB	07fH
	DB	07eH
	DB	050H
	DB	0c4H
	DB	0efH
	DB	06fH
	DB	078H
	DB	048H
	DB	080H
	DB	080H
	DB	087H
	DB	05fH
	DB	07fH
	DB	070H
	DB	00H
	DB	088H
	DB	087H
	DB	0ffH
	DB	07fH
	DB	078H
	DB	030H
	DB	080H
	DB	080H
	DB	080H
	DB	03fH
	DB	07fH
	DB	078H
	DB	050H
	DB	080H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	07aH
	DB	040H
	DB	080H
	DB	080H
	DB	080H
	DB	09fH
	DB	027H
	DB	06bH
	DB	068H
	DB	020H
	DB	080H
	DB	080H
	DB	080H
	DB	0e7H
	DB	00H
	DB	0ebH
	DB	01fH
	DB	030H
	DB	0c0H
	DB	080H
	DB	080H
	DB	080H
	DB	0dfH
	DB	047H
	DB	030H
	DB	0c0H
	DB	080H
	DB	080H
	DB	080H
	DB	0f7H
	DB	07fH
	DB	078H
	DB	0f0H
	DB	080H
	DB	080H
	DB	080H
	DB	0ffH
	DB	04fH
	DB	028H
	DB	0f6H
	DB	0a8H
	DB	080H
	DB	080H
	DB	080H
	DB	0f7H
	DB	06cH
	DB	030H
	DB	0a0H
	DB	09fH
	DB	02fH
	DB	020H
	DB	080H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	078H
	DB	0c0H
	DB	080H
	DB	080H
	DB	080H
	DB	09fH
	DB	07fH
	DB	07fH
	DB	070H
	DB	020H
	DB	0a8H
	DB	080H
	DB	080H
	DB	09fH
	DB	0f7H
	DB	07fH
	DB	070H
	DB	0c0H
	DB	080H
	DB	0f7H
	DB	030H
	DB	0f4H
	DB	081H
	DB	0dfH
	DB	07fH
	DB	07aH
	DB	040H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	079H
	DB	040H
	DB	080H
	DB	080H
	DB	080H
	DB	0bfH
	DB	07fH
	DB	07eH
	DB	077H
	DB	00H
	DB	080H
	DB	080H
	DB	0bfH
	DB	07fH
	DB	07dH
	DB	070H
	DB	080H
	DB	080H
	DB	0cfH
	DB	077H
	DB	070H
	DB	030H
	DB	0e0H
	DB	0cbH
	DB	01fH
	DB	075H
	DB	050H
	DB	00H
	DB	08dH
	DB	0f7H
	DB	04cH
	DB	010H
	DB	0adH
	DB	02fH
	DB	07fH
	DB	060H
	DB	0c0H
	DB	080H
	DB	0bfH
	DB	0e2H
	DB	0baH
	DB	0dfH
	DB	07fH
	DB	07cH
	DB	060H
	DB	080H
	DB	080H
	DB	080H
	DB	0dfH
	DB	07fH
	DB	07eH
	DB	077H
	DB	040H
	DB	0a0H
	DB	080H
	DB	080H
	DB	0bfH
	DB	07fH
	DB	07fH
	DB	078H
	DB	00H
	DB	080H
	DB	080H
	DB	0afH
	DB	0e4H
	DB	0d7H
	DB	037H
	DB	07fH
	DB	028H
	DB	080H
	DB	080H
	DB	08fH
	DB	03fH
	DB	049H
	DB	028H
	DB	0b0H
	DB	080H
	DB	087H
	DB	0ffH
	DB	07fH
	DB	060H
	DB	0a0H
	DB	080H
	DB	09fH
	DB	0dfH
	DB	0c0H
	DB	080H
	DB	0afH
	DB	0ffH
	DB	02bH
	DB	00H
	DB	0b0H
	DB	09aH
	DB	080H
	DB	080H
	DB	0d7H
	DB	027H
	DB	011H
	DB	0d0H
	DB	090H
	DB	087H
	DB	0cfH
	DB	0c0H
	DB	080H
	DB	080H
	DB	0bfH
	DB	01fH
	DB	02cH
	DB	00H
	DB	088H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	0f7H
	DB	07fH
	DB	060H
	DB	0c8H
	DB	080H
	DB	080H
	DB	080H
	DB	0f7H
	DB	00H
	DB	080H
	DB	081H
	DB	07fH
	DB	07cH
	DB	0f0H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	07cH
	DB	00H
	DB	080H
	DB	080H
	DB	08fH
	DB	0efH
	DB	02fH
	DB	020H
	DB	0c0H
	DB	097H
	DB	0d7H
	DB	010H
	DB	090H
	DB	080H
	DB	0f7H
	DB	07fH
	DB	078H
	DB	048H
	DB	025H
	DB	0f0H
	DB	080H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	07cH
	DB	020H
	DB	080H
	DB	080H
	DB	08fH
	DB	07fH
	DB	07fH
	DB	079H
	DB	00H
	DB	0b7H
	DB	0d8H
	DB	084H
	DB	08fH
	DB	0cfH
	DB	04fH
	DB	060H
	DB	020H
	DB	01fH
	DB	00H
	DB	0a8H
	DB	0bbH
	DB	03fH
	DB	07fH
	DB	058H
	DB	0f0H
	DB	0c2H
	DB	0d9H
	DB	0d7H
	DB	01fH
	DB	07fH
	DB	07bH
	DB	050H
	DB	080H
	DB	080H
	DB	09fH
	DB	07fH
	DB	07dH
	DB	076H
	DB	080H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	07dH
	DB	060H
	DB	0a0H
	DB	080H
	DB	080H
	DB	0bfH
	DB	04fH
	DB	058H
	DB	043H
	DB	020H
	DB	080H
	DB	080H
	DB	0dfH
	DB	07fH
	DB	07cH
	DB	00H
	DB	080H
	DB	080H
	DB	06fH
	DB	07fH
	DB	060H
	DB	080H
	DB	080H
	DB	0bfH
	DB	0c0H
	DB	093H
	DB	0efH
	DB	07fH
	DB	068H
	DB	0c0H
	DB	080H
	DB	0dfH
	DB	07fH
	DB	07eH
	DB	00H
	DB	080H
	DB	081H
	DB	07fH
	DB	07eH
	DB	00H
	DB	080H
	DB	080H
	DB	0d7H
	DB	0f5H
	DB	07H
	DB	02cH
	DB	08H
	DB	0d7H
	DB	037H
	DB	07fH
	DB	060H
	DB	0c0H
	DB	080H
	DB	080H
	DB	09fH
	DB	07fH
	DB	07fH
	DB	040H
	DB	080H
	DB	080H
	DB	080H
	DB	0bfH
	DB	04fH
	DB	07fH
	DB	07cH
	DB	050H
	DB	0a0H
	DB	080H
	DB	087H
	DB	0e7H
	DB	07H
	DB	01fH
	DB	05fH
	DB	068H
	DB	020H
	DB	080H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	07dH
	DB	00H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	070H
	DB	080H
	DB	080H
	DB	080H
	DB	08fH
	DB	087H
	DB	0afH
	DB	03fH
	DB	07fH
	DB	070H
	DB	0e0H
	DB	080H
	DB	080H
	DB	0bfH
	DB	04fH
	DB	07fH
	DB	07cH
	DB	048H
	DB	080H
	DB	080H
	DB	080H
	DB	0bfH
	DB	07fH
	DB	07fH
	DB	050H
	DB	090H
	DB	080H
	DB	080H
	DB	0bfH
	DB	05fH
	DB	078H
	DB	040H
	DB	0a0H
	DB	080H
	DB	0bfH
	DB	07H
	DB	0e0H
	DB	080H
	DB	0afH
	DB	03fH
	DB	06cH
	DB	030H
	DB	0e8H
	DB	0ffH
	DB	00H
	DB	0b0H
	DB	097H
	DB	0ffH
	DB	07fH
	DB	060H
	DB	0a0H
	DB	080H
	DB	0f7H
	DB	07fH
	DB	040H
	DB	0c0H
	DB	0d7H
	DB	05fH
	DB	048H
	DB	0a0H
	DB	09fH
	DB	02fH
	DB	07fH
	DB	07cH
	DB	00H
	DB	092H
	DB	09fH
	DB	0cfH
	DB	0efH
	DB	057H
	DB	07fH
	DB	078H
	DB	0c0H
	DB	080H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07bH
	DB	020H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	078H
	DB	0e0H
	DB	080H
	DB	0dfH
	DB	01fH
	DB	064H
	DB	066H
	DB	028H
	DB	0c0H
	DB	080H
	DB	0dfH
	DB	07fH
	DB	070H
	DB	010H
	DB	080H
	DB	080H
	DB	0ffH
	DB	068H
	DB	030H
	DB	0c8H
	DB	0a3H
	DB	0f7H
	DB	07fH
	DB	07cH
	DB	00H
	DB	080H
	DB	080H
	DB	0f7H
	DB	076H
	DB	050H
	DB	06fH
	DB	070H
	DB	00H
	DB	080H
	DB	080H
	DB	080H
	DB	05fH
	DB	07fH
	DB	060H
	DB	0f0H
	DB	080H
	DB	0b7H
	DB	05fH
	DB	078H
	DB	0c0H
	DB	080H
	DB	083H
	DB	07fH
	DB	07fH
	DB	00H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	020H
	DB	080H
	DB	080H
	DB	037H
	DB	07fH
	DB	040H
	DB	090H
	DB	080H
	DB	0bfH
	DB	029H
	DB	0e0H
	DB	080H
	DB	081H
	DB	0efH
	DB	05fH
	DB	04aH
	DB	010H
	DB	080H
	DB	080H
	DB	0ffH
	DB	054H
	DB	010H
	DB	0bbH
	DB	0bfH
	DB	0a0H
	DB	080H
	DB	080H
	DB	09fH
	DB	0ffH
	DB	058H
	DB	00H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	060H
	DB	00H
	DB	0a8H
	DB	080H
	DB	080H
	DB	0bfH
	DB	02fH
	DB	06cH
	DB	020H
	DB	080H
	DB	087H
	DB	0dfH
	DB	0b0H
	DB	080H
	DB	080H
	DB	07fH
	DB	07fH
	DB	070H
	DB	0c0H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	07eH
	DB	00H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	040H
	DB	080H
	DB	083H
	DB	07fH
	DB	07fH
	DB	040H
	DB	0a0H
	DB	080H
	DB	080H
	DB	0bfH
	DB	05fH
	DB	07fH
	DB	07dH
	DB	060H
	DB	0a0H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	07eH
	DB	00H
	DB	080H
	DB	080H
	DB	01fH
	DB	058H
	DB	00H
	DB	0c0H
	DB	0bfH
	DB	0ffH
	DB	07fH
	DB	070H
	DB	020H
	DB	0eH
	DB	0c0H
	DB	09bH
	DB	0f7H
	DB	07fH
	DB	070H
	DB	0e0H
	DB	080H
	DB	087H
	DB	03fH
	DB	07fH
	DB	07cH
	DB	00H
	DB	080H
	DB	080H
	DB	0d7H
	DB	03fH
	DB	070H
	DB	040H
	DB	00H
	DB	0efH
	DB	01fH
	DB	02H
	DB	01fH
	DB	018H
	DB	0e8H
	DB	0e7H
	DB	0e7H
	DB	07H
	DB	03dH
	DB	038H
	DB	00H
	DB	090H
	DB	087H
	DB	0ffH
	DB	06eH
	DB	040H
	DB	0a0H
	DB	080H
	DB	0ffH
	DB	07bH
	DB	06aH
	DB	05cH
	DB	040H
	DB	010H
	DB	080H
	DB	080H
	DB	03fH
	DB	07fH
	DB	070H
	DB	0d0H
	DB	080H
	DB	0bfH
	DB	02fH
	DB	020H
	DB	0c0H
	DB	03fH
	DB	07fH
	DB	07bH
	DB	0e0H
	DB	080H
	DB	080H
	DB	03fH
	DB	07fH
	DB	07dH
	DB	0e0H
	DB	080H
	DB	080H
	DB	0b7H
	DB	037H
	DB	07fH
	DB	060H
	DB	0e0H
	DB	09fH
	DB	03fH
	DB	052H
	DB	00H
	DB	080H
	DB	083H
	DB	0ffH
	DB	06fH
	DB	07fH
	DB	040H
	DB	090H
	DB	080H
	DB	080H
	DB	083H
	DB	0f7H
	DB	05fH
	DB	068H
	DB	040H
	DB	0f0H
	DB	0a0H
	DB	09fH
	DB	0f7H
	DB	0cH
	DB	0e0H
	DB	0a0H
	DB	080H
	DB	0dfH
	DB	07fH
	DB	07fH
	DB	020H
	DB	080H
	DB	080H
	DB	080H
	DB	05fH
	DB	07fH
	DB	07eH
	DB	020H
	DB	080H
	DB	080H
	DB	080H
	DB	0afH
	DB	04fH
	DB	07fH
	DB	044H
	DB	0c0H
	DB	080H
	DB	080H
	DB	080H
	DB	0cfH
	DB	057H
	DB	058H
	DB	0f0H
	DB	088H
	DB	097H
	DB	02fH
	DB	030H
	DB	0c0H
	DB	0c8H
	DB	0bdH
	DB	0f7H
	DB	01bH
	DB	011H
	DB	00H
	DB	0a0H
	DB	080H
	DB	09fH
	DB	03fH
	DB	068H
	DB	020H
	DB	0d1H
	DB	0e0H
	DB	0d0H
	DB	0c0H
	DB	0cfH
	DB	0f3H
	DB	0fdH
	DB	010H
	DB	0e8H
	DB	0c0H
	DB	080H
	DB	0b7H
	DB	01fH
	DB	05eH
	DB	020H
	DB	0b0H
	DB	0cfH
	DB	018H
	DB	0b0H
	DB	080H
	DB	0a7H
	DB	0efH
	DB	04fH
	DB	072H
	DB	050H
	DB	00H
	DB	080H
	DB	080H
	DB	080H
	DB	0bfH
	DB	07fH
	DB	07fH
	DB	078H
	DB	0f0H
	DB	080H
	DB	080H
	DB	09fH
	DB	0ffH
	DB	018H
	DB	037H
	DB	065H
	DB	040H
	DB	0e0H
	DB	0b5H
	DB	089H
	DB	08fH
	DB	088H
	DB	0bfH
	DB	06fH
	DB	07fH
	DB	07eH
	DB	00H
	DB	080H
	DB	080H
	DB	087H
	DB	07fH
	DB	07fH
	DB	07eH
	DB	040H
	DB	080H
	DB	080H
	DB	080H
	DB	05fH
	DB	07fH
	DB	07fH
	DB	040H
	DB	0c4H
	DB	098H
	DB	080H
	DB	08bH
	DB	0f7H
	DB	07bH
	DB	07eH
	DB	040H
	DB	0a0H
	DB	097H
	DB	0cfH
	DB	02dH
	DB	018H
	DB	0ebH
	DB	0f7H
	DB	0aH
	DB	0f4H
	DB	0c0H
	DB	0cfH
	DB	02bH
	DB	050H
	DB	020H
	DB	0edH
	DB	017H
	DB	08H
	DB	0c0H
	DB	0cfH
	DB	037H
	DB	048H
	DB	018H
	DB	0e8H
	DB	0c5H
	DB	0dfH
	DB	0aH
	DB	01H
	DB	0e0H
	DB	0efH
	DB	03fH
	DB	06cH
	DB	020H
	DB	084H
	DB	080H
	DB	0dfH
	DB	05fH
	DB	074H
	DB	040H
	DB	0c0H
	DB	080H
	DB	097H
	DB	03fH
	DB	07fH
	DB	074H
	DB	00H
	DB	080H
	DB	080H
	DB	0bfH
	DB	07fH
	DB	07fH
	DB	030H
	DB	080H
	DB	08fH
	DB	0f7H
	DB	03fH
	DB	00H
	DB	0a0H
	DB	081H
	DB	0afH
	DB	05fH
	DB	07fH
	DB	050H
	DB	0e0H
	DB	080H
	DB	080H
	DB	087H
	DB	0ffH
	DB	07fH
	DB	050H
	DB	080H
	DB	080H
	DB	09fH
	DB	0ffH
	DB	032H
	DB	010H
	DB	0ffH
	DB	035H
	DB	010H
	DB	00H
	DB	0e0H
	DB	0b0H
	DB	09fH
	DB	0bfH
	DB	0ffH
	DB	048H
	DB	00H
	DB	0a0H
	DB	080H
	DB	0bfH
	DB	04fH
	DB	078H
	DB	060H
	DB	00H
	DB	080H
	DB	087H
	DB	0dfH
	DB	04fH
	DB	060H
	DB	00H
	DB	080H
	DB	080H
	DB	0afH
	DB	0e7H
	DB	0bH
	DB	08H
	DB	0e0H
	DB	0baH
	DB	0cfH
	DB	02fH
	DB	06bH
	DB	050H
	DB	0c0H
	DB	080H
	DB	087H
	DB	0ffH
	DB	044H
	DB	00H
	DB	098H
	DB	0bbH
	DB	0f7H
	DB	0f8H
	DB	0a8H
	DB	09bH
	DB	0efH
	DB	03fH
	DB	05bH
	DB	066H
	DB	030H
	DB	080H
	DB	080H
	DB	080H
	DB	0f7H
	DB	07fH
	DB	07cH
	DB	040H
	DB	0d0H
	DB	088H
	DB	080H
	DB	08fH
	DB	01fH
	DB	07fH
	DB	078H
	DB	030H
	DB	080H
	DB	080H
	DB	0cfH
	DB	01fH
	DB	0dH
	DB	01fH
	DB	046H
	DB	032H
	DB	0e0H
	DB	095H
	DB	0b7H
	DB	0ffH
	DB	047H
	DB	05fH
	DB	040H
	DB	0f0H
	DB	0a0H
	DB	080H
	DB	0afH
	DB	01fH
	DB	071H
	DB	040H
	DB	0f4H
	DB	0d0H
	DB	0dbH
	DB	0dbH
	DB	0dfH
	DB	0ffH
	DB	03fH
	DB	048H
	DB	00H
	DB	098H
	DB	0afH
	DB	03fH
	DB	079H
	DB	048H
	DB	0d0H
	DB	080H
	DB	080H
	DB	0d7H
	DB	05fH
	DB	07cH
	DB	060H
	DB	00H
	DB	096H
	DB	0bfH
	DB	017H
	DB	018H
	DB	0f6H
	DB	0daH
	DB	0ebH
	DB	03fH
	DB	062H
	DB	020H
	DB	0b0H
	DB	08bH
	DB	0dfH
	DB	01fH
	DB	010H
	DB	0f0H
	DB	0e7H
	DB	01fH
	DB	044H
	DB	020H
	DB	0d0H
	DB	0b7H
	DB	0dfH
	DB	00H
	DB	0ecH
	DB	0ffH
	DB	03fH
	DB	030H
	DB	00H
	DB	0e2H
	DB	0c0H
	DB	091H
	DB	0bfH
	DB	02fH
	DB	07fH
	DB	060H
	DB	0c0H
	DB	080H
	DB	080H
	DB	0f7H
	DB	073H
	DB	070H
	DB	040H
	DB	0f0H
	DB	0c0H
	DB	090H
	DB	09dH
	DB	0dfH
	DB	037H
	DB	060H
	DB	028H
	DB	0c8H
	DB	082H
	DB	08fH
	DB	0caH
	DB	0d9H
	DB	0f7H
	DB	02fH
	DB	046H
	DB	010H
	DB	090H
	DB	080H
	DB	0efH
	DB	07fH
	DB	078H
	DB	00H
	DB	080H
	DB	080H
	DB	0f7H
	DB	07fH
	DB	070H
	DB	00H
	DB	080H
	DB	080H
	DB	08fH
	DB	03fH
	DB	07fH
	DB	07fH
	DB	00H
	DB	080H
	DB	080H
	DB	0bfH
	DB	05fH
	DB	07fH
	DB	060H
	DB	0f0H
	DB	080H
	DB	080H
	DB	0afH
	DB	02fH
	DB	074H
	DB	060H
	DB	010H
	DB	0c8H
	DB	0acH
	DB	0b3H
	DB	0b7H
	DB	0cfH
	DB	03fH
	DB	07fH
	DB	070H
	DB	0e0H
	DB	080H
	DB	080H
	DB	09fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	00H
	DB	080H
	DB	080H
	DB	080H
	DB	0ffH
	DB	07fH
	DB	07eH
	DB	040H
	DB	0a0H
	DB	080H
	DB	087H
	DB	0ffH
	DB	072H
	DB	040H
	DB	0e0H
	DB	0bbH
	DB	0d7H
	DB	0fH
	DB	02bH
	DB	04H
	DB	0a0H
	DB	080H
	DB	0bfH
	DB	027H
	DB	05bH
	DB	040H
	DB	0f0H
	DB	0b0H
	DB	0afH
	DB	0f3H
	DB	01H
	DB	0f6H
	DB	0d4H
	DB	0c7H
	DB	0ffH
	DB	038H
	DB	010H
	DB	0c8H
	DB	088H
	DB	09fH
	DB	0f7H
	DB	06fH
	DB	078H
	DB	040H
	DB	0a0H
	DB	080H
	DB	097H
	DB	0ffH
	DB	076H
	DB	060H
	DB	00H
	DB	098H
	DB	0abH
	DB	0ffH
	DB	04fH
	DB	028H
	DB	0c4H
	DB	0afH
	DB	0f7H
	DB	04fH
	DB	064H
	DB	020H
	DB	0a0H
	DB	080H
	DB	0cfH
	DB	03fH
	DB	071H
	DB	040H
	DB	0c0H
	DB	087H
	DB	0bfH
	DB	01fH
	DB	067H
	DB	05cH
	DB	028H
	DB	0d0H
	DB	0a3H
	DB	0b7H
	DB	0ebH
	DB	01fH
	DB	019H
	DB	0bH
	DB	013H
	DB	024H
	DB	08H
	DB	0c8H
	DB	098H
	DB	0afH
	DB	0ffH
	DB	05fH
	DB	062H
	DB	024H
	DB	0d0H
	DB	0cbH
	DB	0dfH
	DB	0f5H
	DB	01fH
	DB	02cH
	DB	00H
	DB	0b0H
	DB	09dH
	DB	0d7H
	DB	0fH
	DB	047H
	DB	044H
	DB	00H
	DB	0a0H
	DB	08fH
	DB	0bfH
	DB	0fH
	DB	04bH
	DB	04cH
	DB	020H
	DB	0e0H
	DB	0daH
	DB	0e7H
	DB	0dfH
	DB	0efH
	DB	00H
	DB	017H
	DB	012H
	DB	0d8H
	DB	0a8H
	DB	0b3H
	DB	0efH
	DB	037H
	DB	054H
	DB	020H
	DB	0c0H
	DB	08fH
	DB	0bfH
	DB	037H
	DB	073H
	DB	068H
	DB	020H
	DB	0a4H
	DB	08bH
	DB	0abH
	DB	0cfH
	DB	01fH
	DB	05fH
	DB	060H
	DB	028H
	DB	0c0H
	DB	098H
	DB	0bfH
	DB	0ffH
	DB	035H
	DB	024H
	DB	014H
	DB	0cH
	DB	0ebH
	DB	0d6H
	DB	0d3H
	DB	0fH
	DB	04bH
	DB	04aH
	DB	00H
	DB	090H
	DB	080H
	DB	0bfH
	DB	05fH
	DB	07fH
	DB	060H
	DB	0e0H
	DB	080H
	DB	080H
	DB	0b7H
	DB	01fH
	DB	067H
	DB	05aH
	DB	020H
	DB	0c0H
	DB	08fH
	DB	0b7H
	DB	0f7H
	DB	024H
	DB	020H
	DB	04H
	DB	0f6H
	DB	0f6H
	DB	0e0H
	DB	0c4H
	DB	0bdH
	DB	0ebH
	DB	014H
	DB	014H
	DB	0f6H
	DB	0e1H
	DB	0e2H
	DB	0f7H
	DB	01bH
	DB	024H
	DB	00H
	DB	0d0H
	DB	0b6H
	DB	0bfH
	DB	0f6H
	DB	027H
	DB	03dH
	DB	020H
	DB	0d8H
	DB	0a4H
	DB	0cfH
	DB	017H
	DB	043H
	DB	040H
	DB	08H
	DB	0d0H
	DB	0bfH
	DB	0d3H
	DB	0f6H
	DB	027H
	DB	029H
	DB	00H
	DB	0b4H
	DB	0adH
	DB	0dfH
	DB	01fH
	DB	03eH
	DB	024H
	DB	00H
	DB	0ebH
	DB	0e3H
	DB	0d4H
	DB	0cfH
	DB	0efH
	DB	01fH
	DB	03aH
	DB	028H
	DB	0f0H
	DB	0b4H
	DB	0bfH
	DB	0f6H
	DB	033H
	DB	041H
	DB	020H
	DB	0e0H
	DB	0b0H
	DB	0abH
	DB	0efH
	DB	03fH
	DB	05cH
	DB	020H
	DB	0b0H
	DB	083H
	DB	0bfH
	DB	01fH
	DB	057H
	DB	030H
	DB	0d8H
	DB	0b0H
	DB	0bfH
	DB	0dbH
	DB	0f6H
	DB	01bH
	DB	039H
	DB	028H
	DB	0e0H
	DB	0a8H
	DB	0b7H
	DB	0dfH
	DB	0f7H
	DB	017H
	DB	02eH
	DB	032H
	DB	04H
	DB	0b4H
	DB	098H
	DB	0bfH
	DB	01fH
	DB	073H
	DB	060H
	DB	00H
	DB	080H
	DB	080H
	DB	0afH
	DB	03fH
	DB	07fH
	DB	070H
	DB	020H
	DB	0a0H
	DB	080H
	DB	08fH
	DB	0f7H
	DB	07bH
	DB	07eH
	DB	040H
	DB	0c0H
	DB	080H
	DB	08bH
	DB	0d7H
	DB	03fH
	DB	067H
	DB	050H
	DB	010H
	DB	0d8H
	DB	0c5H
	DB	0cfH
	DB	0e3H
	DB	0ffH
	DB	01bH
	DB	021H
	DB	018H
	DB	04H
	DB	0d8H
	DB	0b6H
	DB	0bfH
	DB	0ffH
	DB	04bH
	DB	052H
	DB	020H
	DB	0d0H
	DB	0aaH
	DB	0bfH
	DB	0ffH
	DB	05fH
	DB	064H
	DB	020H
	DB	0b0H
	DB	080H
	DB	0afH
	DB	0ffH
	DB	03fH
	DB	028H
	DB	00H
	DB	0e8H
	DB	0eaH
	DB	0e3H
	DB	0dfH
	DB	0ebH
	DB	0fH
	DB	019H
	DB	08H
	DB	0f6H
	DB	0eeH
	DB	0f7H
	DB	05H
	DB	0f6H
	DB	0d4H
	DB	0c1H
	DB	0c7H
	DB	0dfH
	DB	0fH
	DB	029H
	DB	027H
	DB	01dH
	DB	04H
	DB	0f0H
	DB	0d0H
	DB	0c7H
	DB	0ebH
	DB	0eH
	DB	01aH
	DB	010H
	DB	0f9H
	DB	0f0H
	DB	0f0H
	DB	0f7H
	DB	07H
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	017H
	DB	027H
	DB	020H
	DB	00H
	DB	0efH
	DB	0f9H
	DB	00H
	DB	0f1H
	DB	0edH
	DB	0f3H
	DB	0fH
	DB	02bH
	DB	020H
	DB	0f8H
	DB	0e0H
	DB	0e1H
	DB	0f3H
	DB	01bH
	DB	037H
	DB	028H
	DB	0f4H
	DB	0b0H
	DB	0afH
	DB	0dfH
	DB	02fH
	DB	04fH
	DB	030H
	DB	0f6H
	DB	0dbH
	DB	0f3H
	DB	0fH
	DB	017H
	DB	0cH
	DB	0f8H
	DB	0f5H
	DB	0f6H
	DB	0f8H
	DB	0f8H
	DB	0eeH
	DB	0f6H
	DB	07H
	DB	023H
	DB	033H
	DB	020H
	DB	0f8H
	DB	0d9H
	DB	0e5H
	DB	0ffH
	DB	02bH
	DB	02eH
	DB	010H
	DB	0e8H
	DB	0dfH
	DB	0dbH
	DB	0f6H
	DB	01bH
	DB	029H
	DB	0cH
	DB	0edH
	DB	0fbH
	DB	01bH
	DB	01fH
	DB	0cH
	DB	0f8H
	DB	0f0H
	DB	0ffH
	DB	0bH
	DB	0fH
	DB	0aH
	DB	0f8H
	DB	0deH
	DB	0dfH
	DB	0ffH
	DB	023H
	DB	027H
	DB	0aH
	DB	0f4H
	DB	0e0H
	DB	0f3H
	DB	01bH
	DB	037H
	DB	028H
	DB	08H
	DB	0e9H
	DB	0e5H
	DB	0fbH
	DB	01fH
	DB	020H
	DB	04H
	DB	0eaH
	DB	0eeH
	DB	03H
	DB	07H
	DB	00H
	DB	0f6H
	DB	0f0H
	DB	0efH
	DB	0fH
	DB	02fH
	DB	030H
	DB	010H
	DB	0dcH
	DB	0cfH
	DB	0efH
	DB	01fH
	DB	02cH
	DB	014H
	DB	0f6H
	DB	0e6H
	DB	0efH
	DB	0bH
	DB	01fH
	DB	020H
	DB	09H
	DB	0f3H
	DB	0e9H
	DB	0f6H
	DB	012H
	DB	01bH
	DB	011H
	DB	00H
	DB	00H
	DB	0fdH
	DB	05H
	DB	07H
	DB	04H
	DB	00H
	DB	0f7H
	DB	0fdH
	DB	03H
	DB	04H
	DB	00H
	DB	0f9H
	DB	0f0H
	DB	0ecH
	DB	0f5H
	DB	07H
	DB	01fH
	DB	020H
	DB	04H
	DB	0e0H
	DB	0d5H
	DB	0ebH
	DB	0bH
	DB	0eH
	DB	0faH
	DB	0e4H
	DB	0ebH
	DB	0bH
	DB	01fH
	DB	016H
	DB	00H
	DB	0e8H
	DB	0e3H
	DB	0efH
	DB	07H
	DB	01bH
	DB	014H
	DB	00H
	DB	0e9H
	DB	0edH
	DB	03H
	DB	013H
	DB	0fH
	DB	05H
	DB	00H
	DB	0faH
	DB	0f3H
	DB	0f3H
	DB	0f9H
	DB	00H
	DB	03H
	DB	01H
	DB	00H
	DB	00H
	DB	01H
	DB	0ffH
	DB	0fbH
	DB	0f9H
	DB	0ffH
	DB	03H
	DB	05H
	DB	01H
	DB	0f9H
	DB	0efH
	DB	0ebH
	DB	0f5H
	DB	02H
	DB	0eH
	DB	0fH
	DB	00H
	DB	0e8H
	DB	0e1H
	DB	0efH
	DB	0ffH
	DB	05H
	DB	0f8H
	DB	0e4H
	DB	0dfH
	DB	0ebH
	DB	0fbH
	DB	01H
	DB	0f7H
	DB	0e7H
	DB	0dcH
	DB	0ddH
	DB	0e5H
	DB	0efH
	DB	0f9H
	DB	00H
	DB	0f3H
	DB	0ebH
	DB	0e9H
	DB	0ecH
	DB	0e4H
	DB	0daH
	DB	0d5H
	DB	0dfH
	DB	0f5H
	DB	03H
	DB	0faH
	DB	0e6H
	DB	0e0H
	DB	0e6H
	DB	0ebH
	DB	0e7H
	DB	0e5H
	DB	0f0H
	DB	0f7H
	DB	0f7H
	DB	0efH
	DB	0edH
	DB	0f6H
	DB	0ffH
	DB	0fbH
	DB	0f4H
	DB	0edH
	DB	0efH
	DB	0f3H
	DB	0f4H
	DB	0f4H
	DB	0f6H
	DB	0f6H
	DB	0f8H
	DB	0f6H
	DB	0f0H
	DB	0efH
	DB	0f5H
	DB	00H
	DB	00H
	DB	01H
	DB	0ffH
	DB	0f8H
	DB	0f0H
	DB	0e9H
	DB	0ebH
	DB	0f6H
	DB	01H
	DB	09H
	DB	06H
	DB	0f9H
	DB	0f0H
	DB	0edH
	DB	0f5H
	DB	0f6H
	DB	0fbH
	DB	00H
	DB	04H
	DB	05H
	DB	02H
	DB	00H
	DB	00H
	DB	0f9H
	DB	0f5H
	DB	0fbH
	DB	05H
	DB	09H
	DB	02H
	DB	0f8H
	DB	0f8H
	DB	06H
	DB	0cH
	DB	05H
	DB	0faH
	DB	0f9H
	DB	0ffH
	DB	0fdH
	DB	0f7H
	DB	0f9H
	DB	02H
	DB	05H
	DB	01H
	DB	0f9H
	DB	0f9H
	DB	0fdH
	DB	0ffH
	DB	00H
	DB	00H
	DB	03H
	DB	01H
	DB	0fbH
	DB	0f8H
	DB	0f9H
	DB	0fbH
	DB	0f7H
	DB	0f9H
	DB	00H
	DB	03H
	DB	07H
	DB	01H
	DB	0f8H
	DB	0f6H
	DB	0f6H
	DB	0fdH
	DB	01H
	DB	02H
	DB	00H
	DB	0fbH
	DB	0f8H
	DB	0fbH
	DB	00H
	DB	0fdH
	DB	0f6H
	DB	0f6H
	DB	00H
	DB	07H
	DB	07H
	DB	02H
	DB	00H
	DB	0f8H
	DB	0f6H
	DB	0fbH
	DB	01H
	DB	06H
	DB	05H
	DB	0ffH
	DB	0fbH
	DB	00H
	DB	0feH
	DB	0fbH
	DB	0fbH
	DB	0f9H
	DB	0fcH
	DB	0ffH
	DB	0fdH
	DB	00H
	DB	00H
	DB	00H
	DB	0ffH
	DB	0fdH
	DB	01H
	DB	05H
	DB	03H
	DB	0fdH
	DB	0f8H
	DB	0f8H
	DB	0f7H
	DB	0f9H
	DB	0f9H
	DB	00H
	DB	0fbH
	DB	0f7H
	DB	00H
	DB	00H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	03fH
	DB	037H
	DB	02fH
	DB	027H
	DB	01fH
	DB	017H
	DB	0fH
	DB	07H
	DB	0ffH
	DB	07H
	DB	0fH
	DB	017H
	DB	01fH
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	037H
	DB	02fH
	DB	027H
	DB	01fH
	DB	017H
	DB	0fH
	DB	07H
	DB	0ffH
	DB	07H
	DB	0fH
	DB	017H
	DB	01fH
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	02fH
	DB	027H
	DB	01fH
	DB	017H
	DB	0fH
	DB	07H
	DB	0ffH
	DB	07H
	DB	0fH
	DB	017H
	DB	01fH
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	0b0H
	DB	027H
	DB	01fH
	DB	017H
	DB	0fH
	DB	07H
	DB	0ffH
	DB	07H
	DB	0fH
	DB	017H
	DB	01fH
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	0b0H
	DB	0a8H
	DB	01fH
	DB	017H
	DB	0fH
	DB	07H
	DB	0ffH
	DB	07H
	DB	0fH
	DB	017H
	DB	01fH
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	0b0H
	DB	0a8H
	DB	0a0H
	DB	017H
	DB	0fH
	DB	07H
	DB	0ffH
	DB	07H
	DB	0fH
	DB	017H
	DB	01fH
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	0b0H
	DB	0a8H
	DB	0a0H
	DB	098H
	DB	0fH
	DB	07H
	DB	0ffH
	DB	07H
	DB	0fH
	DB	017H
	DB	01fH
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	0b0H
	DB	0a8H
	DB	0a0H
	DB	098H
	DB	090H
	DB	07H
	DB	0ffH
	DB	07H
	DB	0fH
	DB	017H
	DB	01fH
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	0b0H
	DB	0a8H
	DB	0a0H
	DB	098H
	DB	090H
	DB	088H
	DB	0ffH
	DB	07H
	DB	0fH
	DB	017H
	DB	01fH
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	0b0H
	DB	0a8H
	DB	0a0H
	DB	098H
	DB	090H
	DB	088H
	DB	080H
	DB	07H
	DB	0fH
	DB	017H
	DB	01fH
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	0b0H
	DB	0a8H
	DB	0a0H
	DB	098H
	DB	090H
	DB	088H
	DB	080H
	DB	088H
	DB	0fH
	DB	017H
	DB	01fH
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	0b0H
	DB	0a8H
	DB	0a0H
	DB	098H
	DB	090H
	DB	088H
	DB	080H
	DB	088H
	DB	090H
	DB	017H
	DB	01fH
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	0b0H
	DB	0a8H
	DB	0a0H
	DB	098H
	DB	090H
	DB	088H
	DB	080H
	DB	088H
	DB	090H
	DB	098H
	DB	01fH
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	0b0H
	DB	0a8H
	DB	0a0H
	DB	098H
	DB	090H
	DB	088H
	DB	080H
	DB	088H
	DB	090H
	DB	098H
	DB	0a0H
	DB	027H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	0b0H
	DB	0a8H
	DB	0a0H
	DB	098H
	DB	090H
	DB	088H
	DB	080H
	DB	088H
	DB	090H
	DB	098H
	DB	0a0H
	DB	0a8H
	DB	02fH
	DB	037H
	DB	0c0H
	DB	0c0H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	0f8H
	DB	0f0H
	DB	0e8H
	DB	0e0H
	DB	0d8H
	DB	0d0H
	DB	0c8H
	DB	0c0H
	DB	0b8H
	DB	0b0H
	DB	0a8H
	DB	0a0H
	DB	098H
	DB	090H
	DB	088H
	DB	080H
	DB	088H
	DB	090H
	DB	098H
	DB	0a0H
	DB	0a8H
	DB	0b0H
	DB	037H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	081H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	07fH
	DB	07fH
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	07fH
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	080H
	DB	080H
	DB	080H
	DB	080H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	080H
	DB	080H
	DB	080H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	080H
	DB	080H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	080H
	DB	080H
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	07fH
	DB	080H
	DB	080H
	DB	090H
	DB	098H
	DB	0a0H
	DB	0a8H
	DB	0b0H
	DB	0b8H
	DB	0c0H
	DB	0c8H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	08H
	DB	010H
	DB	018H
	DB	020H
	DB	028H
	DB	030H
	DB	038H
	DB	040H
	DB	048H
	DB	050H
	DB	058H
	DB	060H
	DB	068H
	DB	070H
	DB	07fH
	DB	080H
	DB	080H
	DB	0a0H
	DB	0b0H
	DB	0c0H
	DB	0d0H
	DB	0e0H
	DB	0f0H
	DB	00H
	DB	010H
	DB	020H
	DB	030H
	DB	040H
	DB	050H
	DB	060H
	DB	070H
	DB	045H
	DB	045H
	DB	079H
	DB	07dH
	DB	07aH
	DB	077H
	DB	070H
	DB	066H
	DB	061H
	DB	058H
	DB	053H
	DB	04dH
	DB	02cH
	DB	020H
	DB	018H
	DB	012H
	DB	04H
	DB	0dbH
	DB	0d3H
	DB	0cdH
	DB	0c6H
	DB	0bcH
	DB	0b5H
	DB	0aeH
	DB	0a8H
	DB	0a3H
	DB	09dH
	DB	099H
	DB	093H
	DB	08eH
	DB	08bH
	DB	08aH
	DB	045H
	DB	045H
	DB	079H
	DB	07dH
	DB	07aH
	DB	077H
	DB	070H
	DB	066H
	DB	05bH
	DB	04bH
	DB	043H
	DB	037H
	DB	02cH
	DB	020H
	DB	018H
	DB	012H
	DB	04H
	DB	0f8H
	DB	0e8H
	DB	0dbH
	DB	0cfH
	DB	0c6H
	DB	0beH
	DB	0b0H
	DB	0a8H
	DB	0a4H
	DB	09eH
	DB	09aH
	DB	095H
	DB	094H
	DB	08dH
	DB	083H
	DB	00H
	DB	00H
	DB	040H
	DB	060H
	DB	07fH
	DB	060H
	DB	040H
	DB	020H
	DB	00H
	DB	0e0H
	DB	0c0H
	DB	0a0H
	DB	080H
	DB	0a0H
	DB	0c0H
	DB	0e0H
	DB	00H
	DB	00H
	DB	040H
	DB	060H
	DB	07fH
	DB	060H
	DB	040H
	DB	020H
	DB	00H
	DB	0e0H
	DB	0c0H
	DB	0a0H
	DB	080H
	DB	0a0H
	DB	0c0H
	DB	0e0H
	DB	080H
	DB	080H
	DB	090H
	DB	098H
	DB	0a0H
	DB	0a8H
	DB	0b0H
	DB	0b8H
	DB	0c0H
	DB	0c8H
	DB	0d0H
	DB	0d8H
	DB	0e0H
	DB	0e8H
	DB	0f0H
	DB	0f8H
	DB	00H
	DB	08H
	DB	010H
	DB	018H
	DB	020H
	DB	028H
	DB	030H
	DB	038H
	DB	040H
	DB	048H
	DB	050H
	DB	058H
	DB	060H
	DB	068H
	DB	070H
	DB	07fH
	DB	080H
	DB	080H
	DB	0a0H
	DB	0b0H
	DB	0c0H
	DB	0d0H
	DB	0e0H
	DB	0f0H
	DB	00H
	DB	010H
	DB	020H
	DB	030H
	DB	040H
	DB	050H
	DB	060H
	DB	070H
	DB	070H
	ORG $+1
?Font4pal@@3PAEA DB 01H					; Font4pal
	DB	012H
	DB	01aH
	DB	03fH
	DB	03fH
	DB	00H
	DB	034H
	DB	034H
	DB	035H
	DB	013H
	DB	024H
	DB	029H
	DB	00H
	DB	0eH
	DB	020H
	DB	00H
	DB	028H
	DB	01cH
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+3
?bActive@@3HA DD 01H					; bActive
_DATA	ENDS
CRT$XCU	SEGMENT
_$S3	DD	FLAT:_$E2
CRT$XCU	ENDS
;	COMDAT _$E2
_TEXT	SEGMENT
_$E2	PROC NEAR					; COMDAT
  00000	e9 00 00 00 00	 jmp	 _$E1
_$E2	ENDP
_TEXT	ENDS
EXTRN	??0TWriter4@@QAE@XZ:NEAR			; TWriter4::TWriter4
;	COMDAT _$E1
_TEXT	SEGMENT
_$E1	PROC NEAR					; COMDAT

; 22   : TWriter4		Wrt;

  00000	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  00005	e9 00 00 00 00	 jmp	 ??0TWriter4@@QAE@XZ	; TWriter4::TWriter4
_$E1	ENDP
_TEXT	ENDS
PUBLIC	?GeneratePalette@@YAXXZ				; GeneratePalette
;	COMDAT ?GeneratePalette@@YAXXZ
_TEXT	SEGMENT
?GeneratePalette@@YAXXZ PROC NEAR			; GeneratePalette, COMDAT

; 37   : 
; 38   : 	Palette[0].peRed	= 4;
; 39   : 	Palette[0].peGreen	= 74;
; 40   : 	Palette[0].peBlue	= 104;
; 41   : 	Palette[0].peFlags	= NULL;

  00000	32 d2		 xor	 dl, dl
  00002	53		 push	 ebx
  00003	c6 05 00 00 00
	00 04		 mov	 BYTE PTR ?Palette@@3PAUtagPALETTEENTRY@@A, 4
  0000a	c6 05 01 00 00
	00 4a		 mov	 BYTE PTR ?Palette@@3PAUtagPALETTEENTRY@@A+1, 74 ; 0000004aH
  00011	c6 05 02 00 00
	00 68		 mov	 BYTE PTR ?Palette@@3PAUtagPALETTEENTRY@@A+2, 104 ; 00000068H
  00018	88 15 03 00 00
	00		 mov	 BYTE PTR ?Palette@@3PAUtagPALETTEENTRY@@A+3, dl
  0001e	b9 05 00 00 00	 mov	 ecx, OFFSET FLAT:?Palette@@3PAUtagPALETTEENTRY@@A+5
  00023	b8 04 00 00 00	 mov	 eax, OFFSET FLAT:?Font4pal@@3PAEA+4
$L51903:

; 42   : 
; 43   : 	for (int i = 1; i < 8; i++)
; 44   : 	{
; 45   : 		Palette[i].peRed	= Font4pal[(i*3)+0] << 2;

  00028	8a 58 ff	 mov	 bl, BYTE PTR [eax-1]
  0002b	83 c0 03	 add	 eax, 3
  0002e	c0 e3 02	 shl	 bl, 2
  00031	88 59 ff	 mov	 BYTE PTR [ecx-1], bl

; 46   : 		Palette[i].peGreen	= Font4pal[(i*3)+1] << 2;

  00034	8a 58 fd	 mov	 bl, BYTE PTR [eax-3]
  00037	c0 e3 02	 shl	 bl, 2
  0003a	88 19		 mov	 BYTE PTR [ecx], bl

; 47   : 		Palette[i].peBlue	= Font4pal[(i*3)+2] << 2;

  0003c	8a 58 fe	 mov	 bl, BYTE PTR [eax-2]
  0003f	c0 e3 02	 shl	 bl, 2
  00042	88 59 01	 mov	 BYTE PTR [ecx+1], bl

; 48   : 		Palette[i].peFlags	= NULL;

  00045	88 51 02	 mov	 BYTE PTR [ecx+2], dl
  00048	83 c1 04	 add	 ecx, 4
  0004b	3d 19 00 00 00	 cmp	 eax, OFFSET FLAT:?Font4pal@@3PAEA+25
  00050	7c d6		 jl	 SHORT $L51903
  00052	5b		 pop	 ebx

; 49   : 	}
; 50   : }

  00053	c3		 ret	 0
?GeneratePalette@@YAXXZ ENDP				; GeneratePalette
_TEXT	ENDS
PUBLIC	?FiniApp@@YAXXZ					; FiniApp
EXTRN	??3@YAXPAX@Z:NEAR				; operator delete
EXTRN	??1CDXScreen@@QAE@XZ:NEAR			; CDXScreen::~CDXScreen
EXTRN	?FC6_Close@@YAXXZ:NEAR				; FC6_Close
EXTRN	??1CDXInput@@QAE@XZ:NEAR			; CDXInput::~CDXInput
;	COMDAT ?FiniApp@@YAXXZ
_TEXT	SEGMENT
?FiniApp@@YAXXZ PROC NEAR				; FiniApp, COMDAT

; 59   : {

  00000	56		 push	 esi

; 60   : 	FC6_Close();

  00001	e8 00 00 00 00	 call	 ?FC6_Close@@YAXXZ	; FC6_Close

; 61   : 
; 62   :     SAFEDELETE( Input );

  00006	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?Input@@3PAVCDXInput@@A ; Input
  0000c	85 f6		 test	 esi, esi
  0000e	74 1a		 je	 SHORT $L51909
  00010	8b ce		 mov	 ecx, esi
  00012	e8 00 00 00 00	 call	 ??1CDXInput@@QAE@XZ	; CDXInput::~CDXInput
  00017	56		 push	 esi
  00018	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  0001d	83 c4 04	 add	 esp, 4
  00020	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?Input@@3PAVCDXInput@@A, 0 ; Input
$L51909:

; 63   : 	SAFEDELETE( Screen );

  0002a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR ?Screen@@3PAVCDXScreen@@A ; Screen
  00030	85 f6		 test	 esi, esi
  00032	74 1a		 je	 SHORT $L51912
  00034	8b ce		 mov	 ecx, esi
  00036	e8 00 00 00 00	 call	 ??1CDXScreen@@QAE@XZ	; CDXScreen::~CDXScreen
  0003b	56		 push	 esi
  0003c	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00041	83 c4 04	 add	 esp, 4
  00044	c7 05 00 00 00
	00 00 00 00 00	 mov	 DWORD PTR ?Screen@@3PAVCDXScreen@@A, 0 ; Screen
$L51912:
  0004e	5e		 pop	 esi

; 64   : }

  0004f	c3		 ret	 0
?FiniApp@@YAXXZ ENDP					; FiniApp
_TEXT	ENDS
PUBLIC	?WinProc@@YGJPAUHWND__@@IIJ@Z			; WinProc
EXTRN	__imp__PostMessageA@16:NEAR
EXTRN	__imp__DefWindowProcA@16:NEAR
EXTRN	__imp__PostQuitMessage@4:NEAR
;	COMDAT ?WinProc@@YGJPAUHWND__@@IIJ@Z
_TEXT	SEGMENT
_hWnd$ = 8
_message$ = 12
_wParam$ = 16
_lParam$ = 20
?WinProc@@YGJPAUHWND__@@IIJ@Z PROC NEAR			; WinProc, COMDAT

; 71   : {

  00000	53		 push	 ebx

; 72   : 	switch(message)
; 73   : 	{

  00001	8b 5c 24 08	 mov	 ebx, DWORD PTR _hWnd$[esp]
  00005	56		 push	 esi
  00006	8b 74 24 10	 mov	 esi, DWORD PTR _message$[esp+4]
  0000a	8b c6		 mov	 eax, esi
  0000c	57		 push	 edi
  0000d	8b 7c 24 18	 mov	 edi, DWORD PTR _wParam$[esp+8]
  00011	83 e8 02	 sub	 eax, 2
  00014	74 4c		 je	 SHORT $L51940
  00016	83 e8 1a	 sub	 eax, 26			; 0000001aH
  00019	74 2d		 je	 SHORT $L51933
  0001b	2d e4 00 00 00	 sub	 eax, 228		; 000000e4H
  00020	75 4d		 jne	 SHORT $L51930

; 74   : 		case WM_ACTIVATEAPP:    bActive = wParam;   // set if app is active or not
; 75   : 			                    break;
; 76   : 
; 77   : 		case WM_KEYDOWN:		switch(wParam)      // if ESC key is hit, quit program
; 78   : 			                    {

  00022	83 ff 1b	 cmp	 edi, 27			; 0000001bH
  00025	75 48		 jne	 SHORT $L51930

; 79   : 				                    case VK_ESCAPE:
; 80   : 					                PostMessage(hWnd, WM_CLOSE, 0, 0);

  00027	6a 00		 push	 0
  00029	6a 00		 push	 0
  0002b	6a 10		 push	 16			; 00000010H
  0002d	53		 push	 ebx
  0002e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostMessageA@16

; 87   : 		                        break;
; 88   : 	}
; 89   : 
; 90   : 	return DefWindowProc(hWnd, message, wParam, lParam);

  00034	8b 44 24 1c	 mov	 eax, DWORD PTR _lParam$[esp+8]
  00038	50		 push	 eax
  00039	57		 push	 edi
  0003a	56		 push	 esi
  0003b	53		 push	 ebx
  0003c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16
  00042	5f		 pop	 edi
  00043	5e		 pop	 esi
  00044	5b		 pop	 ebx

; 91   : }

  00045	c2 10 00	 ret	 16			; 00000010H
$L51933:

; 87   : 		                        break;
; 88   : 	}
; 89   : 
; 90   : 	return DefWindowProc(hWnd, message, wParam, lParam);

  00048	8b 44 24 1c	 mov	 eax, DWORD PTR _lParam$[esp+8]
  0004c	89 3d 00 00 00
	00		 mov	 DWORD PTR ?bActive@@3HA, edi ; bActive
  00052	50		 push	 eax
  00053	57		 push	 edi
  00054	56		 push	 esi
  00055	53		 push	 ebx
  00056	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16
  0005c	5f		 pop	 edi
  0005d	5e		 pop	 esi
  0005e	5b		 pop	 ebx

; 91   : }

  0005f	c2 10 00	 ret	 16			; 00000010H
$L51940:

; 81   : 				                    break;
; 82   : 			                    }
; 83   : 		                        break;
; 84   : 
; 85   : 		case WM_DESTROY:		FiniApp();			// destroy all objects

  00062	e8 00 00 00 00	 call	 ?FiniApp@@YAXXZ		; FiniApp

; 86   : 								PostQuitMessage(0); // terminate program

  00067	6a 00		 push	 0
  00069	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__PostQuitMessage@4
$L51930:

; 87   : 		                        break;
; 88   : 	}
; 89   : 
; 90   : 	return DefWindowProc(hWnd, message, wParam, lParam);

  0006f	8b 44 24 1c	 mov	 eax, DWORD PTR _lParam$[esp+8]
  00073	50		 push	 eax
  00074	57		 push	 edi
  00075	56		 push	 esi
  00076	53		 push	 ebx
  00077	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__DefWindowProcA@16
  0007d	5f		 pop	 edi
  0007e	5e		 pop	 esi
  0007f	5b		 pop	 ebx

; 91   : }

  00080	c2 10 00	 ret	 16			; 00000010H
?WinProc@@YGJPAUHWND__@@IIJ@Z ENDP			; WinProc
_TEXT	ENDS
PUBLIC	?InitApp@@YAHPAUHINSTANCE__@@H@Z		; InitApp
PUBLIC	??_C@_09MCGC@Example?55?$AA@			; `string'
PUBLIC	??_C@_0CB@CKNE@could?5not?5create?5the?5main?5window@ ; `string'
PUBLIC	??_C@_0CD@BGJB@could?5not?5set?5video?5mode?5640x480@ ; `string'
PUBLIC	??_C@_0CC@POJG@Could?5not?5create?5CDXInput?5object@ ; `string'
EXTRN	__except_list:DWORD
EXTRN	___CxxFrameHandler:NEAR
EXTRN	__imp__GetActiveWindow@0:NEAR
EXTRN	__imp__LoadCursorA@8:NEAR
EXTRN	__imp__LoadIconA@8:NEAR
EXTRN	__imp__GetSystemMetrics@4:NEAR
EXTRN	??2@YAPAXI@Z:NEAR				; operator new
EXTRN	??0CDXScreen@@QAE@XZ:NEAR			; CDXScreen::CDXScreen
EXTRN	__imp__Sleep@4:NEAR
EXTRN	?CreateFullScreen@CDXScreen@@QAEHPAXKKKH@Z:NEAR	; CDXScreen::CreateFullScreen
EXTRN	_CDXError:NEAR
EXTRN	?SetPalette@CDXScreen@@QAEXHHPAUtagPALETTEENTRY@@@Z:NEAR ; CDXScreen::SetPalette
EXTRN	__imp__GetStockObject@4:NEAR
EXTRN	__imp__UpdateWindow@4:NEAR
EXTRN	?FC6_Open@@YAHKHH@Z:NEAR			; FC6_Open
EXTRN	?FC6_Init@@YAHPAC@Z:NEAR			; FC6_Init
EXTRN	?FC6_Start@@YAXXZ:NEAR				; FC6_Start
EXTRN	__imp__RegisterClassA@4:NEAR
EXTRN	__imp__CreateWindowExA@48:NEAR
EXTRN	__imp__ShowWindow@8:NEAR
EXTRN	??0CDXInput@@QAE@XZ:NEAR			; CDXInput::CDXInput
EXTRN	?Create@CDXInput@@QAEHPAX0H@Z:NEAR		; CDXInput::Create
;	COMDAT ??_C@_09MCGC@Example?55?$AA@
; File D:\Progetti\VisualC\Prova09cdx\Main.cpp
_DATA	SEGMENT
??_C@_09MCGC@Example?55?$AA@ DB 'Example 5', 00H	; `string'
_DATA	ENDS
;	COMDAT ??_C@_0CB@CKNE@could?5not?5create?5the?5main?5window@
_DATA	SEGMENT
??_C@_0CB@CKNE@could?5not?5create?5the?5main?5window@ DB 'could not creat'
	DB	'e the main window', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0CD@BGJB@could?5not?5set?5video?5mode?5640x480@
_DATA	SEGMENT
??_C@_0CD@BGJB@could?5not?5set?5video?5mode?5640x480@ DB 'could not set v'
	DB	'ideo mode 640x480x8', 00H			; `string'
_DATA	ENDS
;	COMDAT ??_C@_0CC@POJG@Could?5not?5create?5CDXInput?5object@
_DATA	SEGMENT
??_C@_0CC@POJG@Could?5not?5create?5CDXInput?5object@ DB 'Could not create'
	DB	' CDXInput object!', 00H			; `string'
_DATA	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
$T52229	DD	019930520H
	DD	02H
	DD	FLAT:$T52233
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	ORG $+4
$T52233	DD	0ffffffffH
	DD	FLAT:$L52224
	DD	0ffffffffH
	DD	FLAT:$L52225
xdata$x	ENDS
;	COMDAT ?InitApp@@YAHPAUHINSTANCE__@@H@Z
_TEXT	SEGMENT
__$EHRec$ = -12
_hInst$ = 8
_nCmdShow$ = 12
_WndClass$ = -52
$T52217 = 8
$T52221 = 8
?InitApp@@YAHPAUHINSTANCE__@@H@Z PROC NEAR		; InitApp, COMDAT

; 99   : {

  00000	6a ff		 push	 -1
  00002	68 00 00 00 00	 push	 $L52231
  00007	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:__except_list
  0000d	50		 push	 eax
  0000e	64 89 25 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, esp
  00015	83 ec 28	 sub	 esp, 40			; 00000028H
  00018	53		 push	 ebx

; 100  : 	HWND hWnd;
; 101  : 	WNDCLASS WndClass;
; 102  : 
; 103  : 	WndClass.style = CS_HREDRAW | CS_VREDRAW;
; 104  : 	WndClass.lpfnWndProc = WinProc;
; 105  : 	WndClass.cbClsExtra = 0;
; 106  : 	WndClass.cbWndExtra = 0;
; 107  : 	WndClass.hInstance = hInst;

  00019	8b 5c 24 3c	 mov	 ebx, DWORD PTR _hInst$[esp+52]
  0001d	56		 push	 esi
  0001e	57		 push	 edi
  0001f	33 ff		 xor	 edi, edi

; 108  : 	WndClass.hIcon = LoadIcon(0, IDI_APPLICATION);

  00021	68 00 7f 00 00	 push	 32512			; 00007f00H
  00026	57		 push	 edi
  00027	c7 44 24 14 03
	00 00 00	 mov	 DWORD PTR _WndClass$[esp+72], 3
  0002f	c7 44 24 18 00
	00 00 00	 mov	 DWORD PTR _WndClass$[esp+76], OFFSET FLAT:?WinProc@@YGJPAUHWND__@@IIJ@Z ; WinProc
  00037	89 7c 24 1c	 mov	 DWORD PTR _WndClass$[esp+80], edi
  0003b	89 7c 24 20	 mov	 DWORD PTR _WndClass$[esp+84], edi
  0003f	89 5c 24 24	 mov	 DWORD PTR _WndClass$[esp+88], ebx
  00043	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadIconA@8

; 109  : 	WndClass.hCursor = LoadCursor(0, IDC_ARROW);

  00049	68 00 7f 00 00	 push	 32512			; 00007f00H
  0004e	57		 push	 edi
  0004f	89 44 24 28	 mov	 DWORD PTR _WndClass$[esp+92], eax
  00053	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__LoadCursorA@8

; 110  : 	WndClass.hbrBackground = (HBRUSH)GetStockObject(BLACK_BRUSH);

  00059	6a 04		 push	 4
  0005b	89 44 24 28	 mov	 DWORD PTR _WndClass$[esp+92], eax
  0005f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetStockObject@4
  00065	89 44 24 28	 mov	 DWORD PTR _WndClass$[esp+92], eax

; 111  : 	WndClass.lpszMenuName = 0;
; 112  : 	WndClass.lpszClassName = "Example 5";
; 113  : 	RegisterClass(&WndClass);

  00069	8d 44 24 0c	 lea	 eax, DWORD PTR _WndClass$[esp+64]
  0006d	50		 push	 eax
  0006e	89 7c 24 30	 mov	 DWORD PTR _WndClass$[esp+100], edi
  00072	c7 44 24 34 00
	00 00 00	 mov	 DWORD PTR _WndClass$[esp+104], OFFSET FLAT:??_C@_09MCGC@Example?55?$AA@ ; `string'
  0007a	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__RegisterClassA@4

; 114  : 
; 115  :     // create the main window
; 116  : 	hWnd = CreateWindowEx(
; 117  : 		WS_EX_TOPMOST,
; 118  : 		"Example 5",
; 119  : 		"Example 5",
; 120  : 		WS_POPUP,
; 121  : 		0,0,
; 122  : 		GetSystemMetrics(SM_CXSCREEN),
; 123  : 		GetSystemMetrics(SM_CYSCREEN),
; 124  : 		NULL,
; 125  : 		NULL,
; 126  : 		hInst,
; 127  : 		NULL);

  00080	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__GetSystemMetrics@4
  00086	57		 push	 edi
  00087	53		 push	 ebx
  00088	57		 push	 edi
  00089	57		 push	 edi
  0008a	6a 01		 push	 1
  0008c	ff d6		 call	 esi
  0008e	50		 push	 eax
  0008f	57		 push	 edi
  00090	ff d6		 call	 esi
  00092	50		 push	 eax
  00093	57		 push	 edi
  00094	57		 push	 edi
  00095	68 00 00 00 80	 push	 -2147483648		; 80000000H
  0009a	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09MCGC@Example?55?$AA@ ; `string'
  0009f	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_09MCGC@Example?55?$AA@ ; `string'
  000a4	6a 08		 push	 8
  000a6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__CreateWindowExA@48
  000ac	8b f0		 mov	 esi, eax

; 128  : 
; 129  : 	if(!hWnd) 

  000ae	3b f7		 cmp	 esi, edi
  000b0	75 0e		 jne	 SHORT $L51955

; 130  :         CDXError( NULL , "could not create the main window" );

  000b2	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CB@CKNE@could?5not?5create?5the?5main?5window@ ; `string'
  000b7	57		 push	 edi
  000b8	e8 00 00 00 00	 call	 _CDXError
  000bd	83 c4 08	 add	 esp, 8
$L51955:

; 131  : 
; 132  : 
; 133  : 	
; 134  : 	ShowWindow(hWnd, nCmdShow);

  000c0	8b 4c 24 48	 mov	 ecx, DWORD PTR _nCmdShow$[esp+60]
  000c4	51		 push	 ecx
  000c5	56		 push	 esi
  000c6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__ShowWindow@8

; 135  : 	UpdateWindow(hWnd);

  000cc	56		 push	 esi
  000cd	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__UpdateWindow@4

; 136  : 
; 137  : 
; 138  : 	Screen = new CDXScreen();

  000d3	6a 58		 push	 88			; 00000058H
  000d5	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  000da	83 c4 04	 add	 esp, 4
  000dd	89 44 24 44	 mov	 DWORD PTR $T52217[esp+60], eax
  000e1	3b c7		 cmp	 eax, edi
  000e3	89 7c 24 3c	 mov	 DWORD PTR __$EHRec$[esp+72], edi
  000e7	74 09		 je	 SHORT $L52218
  000e9	8b c8		 mov	 ecx, eax
  000eb	e8 00 00 00 00	 call	 ??0CDXScreen@@QAE@XZ	; CDXScreen::CDXScreen
  000f0	eb 02		 jmp	 SHORT $L52219
$L52218:
  000f2	33 c0		 xor	 eax, eax
$L52219:

; 139  : 
; 140  :     if( Screen->CreateFullScreen( hWnd , 640 , 480 , 8 ) == FALSE )

  000f4	57		 push	 edi
  000f5	6a 08		 push	 8
  000f7	68 e0 01 00 00	 push	 480			; 000001e0H
  000fc	68 80 02 00 00	 push	 640			; 00000280H
  00101	56		 push	 esi
  00102	8b c8		 mov	 ecx, eax
  00104	c7 44 24 50 ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+92], -1
  0010c	a3 00 00 00 00	 mov	 DWORD PTR ?Screen@@3PAVCDXScreen@@A, eax ; Screen
  00111	e8 00 00 00 00	 call	 ?CreateFullScreen@CDXScreen@@QAEHPAXKKKH@Z ; CDXScreen::CreateFullScreen
  00116	85 c0		 test	 eax, eax
  00118	75 14		 jne	 SHORT $L51961

; 141  :         CDXError( Screen , "could not set video mode 640x480x8" );

  0011a	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR ?Screen@@3PAVCDXScreen@@A ; Screen
  00120	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CD@BGJB@could?5not?5set?5video?5mode?5640x480@ ; `string'
  00125	52		 push	 edx
  00126	e8 00 00 00 00	 call	 _CDXError
  0012b	83 c4 08	 add	 esp, 8
$L51961:

; 142  : 
; 143  : 
; 144  : 	GeneratePalette();

  0012e	e8 00 00 00 00	 call	 ?GeneratePalette@@YAXXZ	; GeneratePalette

; 145  : 	Screen->SetPalette(0,8,Palette);

  00133	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Screen@@3PAVCDXScreen@@A ; Screen
  00139	68 00 00 00 00	 push	 OFFSET FLAT:?Palette@@3PAUtagPALETTEENTRY@@A ; Palette
  0013e	6a 08		 push	 8
  00140	57		 push	 edi
  00141	e8 00 00 00 00	 call	 ?SetPalette@CDXScreen@@QAEXHHPAUtagPALETTEENTRY@@@Z ; CDXScreen::SetPalette

; 146  : 
; 147  : 
; 148  : 
; 149  : 	Input = new CDXInput;

  00146	68 40 15 00 00	 push	 5440			; 00001540H
  0014b	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  00150	83 c4 04	 add	 esp, 4
  00153	89 44 24 44	 mov	 DWORD PTR $T52221[esp+60], eax
  00157	3b c7		 cmp	 eax, edi
  00159	c7 44 24 3c 01
	00 00 00	 mov	 DWORD PTR __$EHRec$[esp+72], 1
  00161	74 09		 je	 SHORT $L52222
  00163	8b c8		 mov	 ecx, eax
  00165	e8 00 00 00 00	 call	 ??0CDXInput@@QAE@XZ	; CDXInput::CDXInput
  0016a	eb 02		 jmp	 SHORT $L52223
$L52222:
  0016c	33 c0		 xor	 eax, eax
$L52223:

; 150  :     if( Input == NULL )	

  0016e	3b c7		 cmp	 eax, edi
  00170	c7 44 24 3c ff
	ff ff ff	 mov	 DWORD PTR __$EHRec$[esp+72], -1
  00178	a3 00 00 00 00	 mov	 DWORD PTR ?Input@@3PAVCDXInput@@A, eax ; Input
  0017d	75 13		 jne	 SHORT $L51967

; 151  : 		CDXError( Screen , "Could not create CDXInput object!" );

  0017f	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Screen@@3PAVCDXScreen@@A ; Screen
  00184	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@POJG@Could?5not?5create?5CDXInput?5object@ ; `string'
  00189	50		 push	 eax
  0018a	e8 00 00 00 00	 call	 _CDXError
  0018f	83 c4 08	 add	 esp, 8
$L51967:

; 152  : 
; 153  : 	if( Input->Create(hInst, hWnd) == FALSE )

  00192	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Input@@3PAVCDXInput@@A ; Input
  00198	6a 01		 push	 1
  0019a	56		 push	 esi
  0019b	53		 push	 ebx
  0019c	e8 00 00 00 00	 call	 ?Create@CDXInput@@QAEHPAX0H@Z ; CDXInput::Create
  001a1	5f		 pop	 edi
  001a2	5e		 pop	 esi
  001a3	85 c0		 test	 eax, eax
  001a5	5b		 pop	 ebx
  001a6	75 14		 jne	 SHORT $L51969

; 154  :         CDXError( Screen , "Could not create CDXInput object!" );

  001a8	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Screen@@3PAVCDXScreen@@A ; Screen
  001ae	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@POJG@Could?5not?5create?5CDXInput?5object@ ; `string'
  001b3	51		 push	 ecx
  001b4	e8 00 00 00 00	 call	 _CDXError
  001b9	83 c4 08	 add	 esp, 8
$L51969:

; 155  : 
; 156  : 
; 157  : 	Sleep(500);

  001bc	68 f4 01 00 00	 push	 500			; 000001f4H
  001c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__Sleep@4

; 158  : 
; 159  : 
; 160  : 	if (FC6_Open((DWORD)GetActiveWindow(),4,4) == 0)

  001c7	6a 04		 push	 4
  001c9	6a 04		 push	 4
  001cb	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__GetActiveWindow@0
  001d1	50		 push	 eax
  001d2	e8 00 00 00 00	 call	 ?FC6_Open@@YAHKHH@Z	; FC6_Open
  001d7	83 c4 0c	 add	 esp, 12			; 0000000cH
  001da	85 c0		 test	 eax, eax
  001dc	75 12		 jne	 SHORT $L52230

; 161  : 	{
; 162  : 			FC6_Init((SBYTE*)Modulo);

  001de	68 00 00 00 00	 push	 OFFSET FLAT:?Modulo@@3PAEA ; Modulo
  001e3	e8 00 00 00 00	 call	 ?FC6_Init@@YAHPAC@Z	; FC6_Init
  001e8	83 c4 04	 add	 esp, 4

; 163  : 			FC6_Start();

  001eb	e8 00 00 00 00	 call	 ?FC6_Start@@YAXXZ	; FC6_Start
$L52230:

; 164  : 	}
; 165  : 
; 166  : 
; 167  : 
; 168  : 	return TRUE;
; 169  : }

  001f0	8b 4c 24 28	 mov	 ecx, DWORD PTR __$EHRec$[esp+52]
  001f4	b8 01 00 00 00	 mov	 eax, 1
  001f9	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:__except_list, ecx
  00200	83 c4 34	 add	 esp, 52			; 00000034H
  00203	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$L52224:
  00000	8b 45 04	 mov	 eax, DWORD PTR $T52217[ebp-4]
  00003	50		 push	 eax
  00004	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00009	59		 pop	 ecx
  0000a	c3		 ret	 0
$L52225:
  0000b	8b 45 04	 mov	 eax, DWORD PTR $T52221[ebp-4]
  0000e	50		 push	 eax
  0000f	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00014	59		 pop	 ecx
  00015	c3		 ret	 0
$L52231:
  00016	b8 00 00 00 00	 mov	 eax, OFFSET FLAT:$T52229
  0001b	e9 00 00 00 00	 jmp	 ___CxxFrameHandler
text$x	ENDS
?InitApp@@YAHPAUHINSTANCE__@@H@Z ENDP			; InitApp
PUBLIC	?DoUpdate@@YAXXZ				; DoUpdate
PUBLIC	??_C@_0CC@GECH@Could?5not?5initialize?5application@ ; `string'
PUBLIC	_WinMain@16
EXTRN	__imp__GetMessageA@16:NEAR
EXTRN	__imp__TranslateMessage@4:NEAR
EXTRN	__imp__DispatchMessageA@4:NEAR
EXTRN	__imp__PeekMessageA@20:NEAR
EXTRN	__imp__WaitMessage@0:NEAR
;	COMDAT ??_C@_0CC@GECH@Could?5not?5initialize?5application@
; File D:\Progetti\VisualC\Prova09cdx\Main.cpp
_DATA	SEGMENT
??_C@_0CC@GECH@Could?5not?5initialize?5application@ DB 'Could not initial'
	DB	'ize application!', 00H			; `string'
_DATA	ENDS
;	COMDAT _WinMain@16
_TEXT	SEGMENT
_hInst$ = 8
_nCmdShow$ = 20
_msg$ = -28
_WinMain@16 PROC NEAR					; COMDAT

; 179  : 	MSG     msg;
; 180  : 
; 181  : 	if(!InitApp(hInst, nCmdShow))

  00000	8b 44 24 10	 mov	 eax, DWORD PTR _nCmdShow$[esp-4]
  00004	8b 4c 24 04	 mov	 ecx, DWORD PTR _hInst$[esp-4]
  00008	83 ec 1c	 sub	 esp, 28			; 0000001cH
  0000b	50		 push	 eax
  0000c	51		 push	 ecx
  0000d	e8 00 00 00 00	 call	 ?InitApp@@YAHPAUHINSTANCE__@@H@Z ; InitApp
  00012	83 c4 08	 add	 esp, 8
  00015	85 c0		 test	 eax, eax
  00017	75 0e		 jne	 SHORT $L52242

; 182  :         CDXError( NULL , "Could not initialize application!" );

  00019	68 00 00 00 00	 push	 OFFSET FLAT:??_C@_0CC@GECH@Could?5not?5initialize?5application@ ; `string'
  0001e	50		 push	 eax
  0001f	e8 00 00 00 00	 call	 _CDXError
  00024	83 c4 08	 add	 esp, 8
$L52242:
  00027	53		 push	 ebx
  00028	8b 1d 00 00 00
	00		 mov	 ebx, DWORD PTR __imp__TranslateMessage@4
  0002e	55		 push	 ebp
  0002f	8b 2d 00 00 00
	00		 mov	 ebp, DWORD PTR __imp__DispatchMessageA@4
  00035	56		 push	 esi
  00036	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp__PeekMessageA@20
  0003c	57		 push	 edi
  0003d	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp__GetMessageA@16
$L51983:

; 185  : 	{
; 186  : 		if(PeekMessage(&msg, NULL, 0, 0, PM_NOREMOVE))

  00043	6a 00		 push	 0
  00045	6a 00		 push	 0
  00047	6a 00		 push	 0
  00049	8d 54 24 1c	 lea	 edx, DWORD PTR _msg$[esp+56]
  0004d	6a 00		 push	 0
  0004f	52		 push	 edx
  00050	ff d6		 call	 esi
  00052	85 c0		 test	 eax, eax
  00054	74 21		 je	 SHORT $L51985

; 187  : 		{
; 188  : 			if(!GetMessage(&msg, NULL, 0, 0 )) return msg.wParam;

  00056	6a 00		 push	 0
  00058	6a 00		 push	 0
  0005a	8d 44 24 18	 lea	 eax, DWORD PTR _msg$[esp+52]
  0005e	6a 00		 push	 0
  00060	50		 push	 eax
  00061	ff d7		 call	 edi
  00063	85 c0		 test	 eax, eax
  00065	74 28		 je	 SHORT $L52243

; 189  : 			TranslateMessage(&msg); 

  00067	8d 4c 24 10	 lea	 ecx, DWORD PTR _msg$[esp+44]
  0006b	51		 push	 ecx
  0006c	ff d3		 call	 ebx

; 190  : 			DispatchMessage(&msg);

  0006e	8d 54 24 10	 lea	 edx, DWORD PTR _msg$[esp+44]
  00072	52		 push	 edx
  00073	ff d5		 call	 ebp

; 191  : 		}
; 192  : 		else if(bActive)                            // if application has the focus, process

  00075	eb cc		 jmp	 SHORT $L51983
$L51985:
  00077	a1 00 00 00 00	 mov	 eax, DWORD PTR ?bActive@@3HA ; bActive
  0007c	85 c0		 test	 eax, eax
  0007e	74 07		 je	 SHORT $L51988

; 193  : 		{
; 194  : 			DoUpdate();

  00080	e8 00 00 00 00	 call	 ?DoUpdate@@YAXXZ	; DoUpdate

; 195  : 		}
; 196  : 		else WaitMessage();

  00085	eb bc		 jmp	 SHORT $L51983
$L51988:
  00087	ff 15 00 00 00
	00		 call	 DWORD PTR __imp__WaitMessage@0

; 183  : 
; 184  : 	while(1)

  0008d	eb b4		 jmp	 SHORT $L51983
$L52243:

; 187  : 		{
; 188  : 			if(!GetMessage(&msg, NULL, 0, 0 )) return msg.wParam;

  0008f	8b 44 24 18	 mov	 eax, DWORD PTR _msg$[esp+52]
  00093	5f		 pop	 edi
  00094	5e		 pop	 esi
  00095	5d		 pop	 ebp
  00096	5b		 pop	 ebx

; 197  : 	}
; 198  : }

  00097	83 c4 1c	 add	 esp, 28			; 0000001cH
  0009a	c2 10 00	 ret	 16			; 00000010H
_WinMain@16 ENDP
_TEXT	ENDS
PUBLIC	?RunOnce@@YAXPACHH@Z				; RunOnce
EXTRN	__fltused:NEAR
EXTRN	?Fill@CDXScreen@@QAEXK@Z:NEAR			; CDXScreen::Fill
EXTRN	?Flip@CDXScreen@@QAEJHHH@Z:NEAR			; CDXScreen::Flip
EXTRN	?SetTSC@KTSC@@QAEXXZ:NEAR			; KTSC::SetTSC
EXTRN	?GetCPUms@KTSC@@QAEMXZ:NEAR			; KTSC::GetCPUms
EXTRN	?Lock@CDXSurface@@QAEJXZ:NEAR			; CDXSurface::Lock
EXTRN	?UnLock@CDXSurface@@QAEJXZ:NEAR			; CDXSurface::UnLock
EXTRN	?Update@CDXInput@@QAEXXZ:NEAR			; CDXInput::Update
;	COMDAT ?DoUpdate@@YAXXZ
_TEXT	SEGMENT
?DoUpdate@@YAXXZ PROC NEAR				; DoUpdate, COMDAT

; 214  : 		Input->Update();

  00000	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Input@@3PAVCDXInput@@A ; Input
  00006	e8 00 00 00 00	 call	 ?Update@CDXInput@@QAEXXZ ; CDXInput::Update

; 215  : 
; 216  : 		cpuBench.SetTSC();

  0000b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?cpuBench@@3VKTSC@@A
  00010	e8 00 00 00 00	 call	 ?SetTSC@KTSC@@QAEXXZ	; KTSC::SetTSC

; 217  : 
; 218  : 		Screen->Fill(0);

  00015	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Screen@@3PAVCDXScreen@@A ; Screen
  0001b	6a 00		 push	 0
  0001d	e8 00 00 00 00	 call	 ?Fill@CDXScreen@@QAEXK@Z ; CDXScreen::Fill

; 219  : 
; 220  : 		Screen->GetBack()->Lock( );

  00022	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Screen@@3PAVCDXScreen@@A ; Screen
  00027	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0002a	e8 00 00 00 00	 call	 ?Lock@CDXSurface@@QAEJXZ ; CDXSurface::Lock

; 221  : 		SBYTE *pixels = (SBYTE*) Screen->GetBack()->GetSurfaceBytesPointer( );
; 222  : 
; 223  : //------------------------
; 224  : 
; 225  : 		RunOnce(pixels, Screen->GetBack()->GetPitch() , Screen->GetBack()->GetHeight());

  0002f	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Screen@@3PAVCDXScreen@@A ; Screen
  00035	8b 41 08	 mov	 eax, DWORD PTR [ecx+8]
  00038	8b 50 08	 mov	 edx, DWORD PTR [eax+8]
  0003b	8b 48 4c	 mov	 ecx, DWORD PTR [eax+76]
  0003e	52		 push	 edx
  0003f	8b 50 60	 mov	 edx, DWORD PTR [eax+96]
  00042	51		 push	 ecx
  00043	52		 push	 edx
  00044	e8 00 00 00 00	 call	 ?RunOnce@@YAXPACHH@Z	; RunOnce

; 226  : 
; 227  : //------------------------
; 228  : 		Screen->GetBack()->UnLock();

  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Screen@@3PAVCDXScreen@@A ; Screen
  0004e	83 c4 0c	 add	 esp, 12			; 0000000cH
  00051	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  00054	e8 00 00 00 00	 call	 ?UnLock@CDXSurface@@QAEJXZ ; CDXSurface::UnLock

; 229  : 
; 230  : 		cpuMS = cpuBench.GetCPUms();

  00059	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?cpuBench@@3VKTSC@@A
  0005e	e8 00 00 00 00	 call	 ?GetCPUms@KTSC@@QAEMXZ	; KTSC::GetCPUms

; 231  : 
; 232  : 		Screen->Flip(TRUE);

  00063	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?Screen@@3PAVCDXScreen@@A ; Screen
  00069	6a 00		 push	 0
  0006b	d9 1d 00 00 00
	00		 fstp	 DWORD PTR ?cpuMS@@3MA	; cpuMS
  00071	6a 01		 push	 1
  00073	6a 01		 push	 1
  00075	e8 00 00 00 00	 call	 ?Flip@CDXScreen@@QAEJHHH@Z ; CDXScreen::Flip

; 233  : 
; 234  : }

  0007a	c3		 ret	 0
?DoUpdate@@YAXXZ ENDP					; DoUpdate
_TEXT	ENDS
PUBLIC	?DrawSEQ@@YAXHHH@Z				; DrawSEQ
EXTRN	_VGF1_GetChanMasterVol:NEAR
EXTRN	?FC6_IsPlaying@@YAHXZ:NEAR			; FC6_IsPlaying
EXTRN	?WriteHexByte@TWriter4@@QAEXHHHH@Z:NEAR		; TWriter4::WriteHexByte
;	COMDAT ?DrawSEQ@@YAXHHH@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_rows$ = 16
_i$ = 8
_j$ = -12
_lx$ = -4
_rw$ = -8
?DrawSEQ@@YAXHHH@Z PROC NEAR				; DrawSEQ, COMDAT

; 257  : {

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 258  : int	 i,j,lx,col;
; 259  : SBYTE	*p = Info.SeqPtr;
; 260  : int		rw = Info.SeqRow;

  00003	a1 0c 00 00 00	 mov	 eax, DWORD PTR ?Info@@3UtagDataInfo@@A+12
  00008	57		 push	 edi
  00009	8b 3d 08 00 00
	00		 mov	 edi, DWORD PTR ?Info@@3UtagDataInfo@@A+8
  0000f	89 44 24 08	 mov	 DWORD PTR _rw$[esp+16], eax

; 261  : 
; 262  : 	if (!FC6_IsPlaying()) return;

  00013	e8 00 00 00 00	 call	 ?FC6_IsPlaying@@YAHXZ	; FC6_IsPlaying
  00018	85 c0		 test	 eax, eax
  0001a	0f 84 08 01 00
	00		 je	 $L52010

; 263  : 	if (!p) return;

  00020	85 ff		 test	 edi, edi
  00022	0f 84 00 01 00
	00		 je	 $L52010

; 264  : 
; 265  : 	for (j = 0; j < rows; j++)

  00028	8b 44 24 1c	 mov	 eax, DWORD PTR _rows$[esp+12]
  0002c	c7 44 24 04 00
	00 00 00	 mov	 DWORD PTR _j$[esp+16], 0
  00034	85 c0		 test	 eax, eax
  00036	0f 8e ec 00 00
	00		 jle	 $L52010
  0003c	53		 push	 ebx
  0003d	8b 5c 24 1c	 mov	 ebx, DWORD PTR _y$[esp+16]
  00041	55		 push	 ebp
  00042	8b 6c 24 1c	 mov	 ebp, DWORD PTR _x$[esp+20]
  00046	56		 push	 esi
$L52008:

; 266  : 	{
; 267  : 		col = (j == 0) ? 0 : 1;

  00047	8b 74 24 10	 mov	 esi, DWORD PTR _j$[esp+28]
  0004b	33 c9		 xor	 ecx, ecx
  0004d	85 f6		 test	 esi, esi
  0004f	0f 95 c1	 setne	 cl
  00052	8b f1		 mov	 esi, ecx

; 268  : 		lx = x;
; 269  : 
; 270  : 		Wrt.WriteHexByte(x, y+j, rw++, col); x += 3;

  00054	8b 4c 24 14	 mov	 ecx, DWORD PTR _rw$[esp+28]
  00058	8b c1		 mov	 eax, ecx
  0005a	41		 inc	 ecx
  0005b	56		 push	 esi
  0005c	50		 push	 eax
  0005d	89 4c 24 1c	 mov	 DWORD PTR _rw$[esp+36], ecx
  00061	53		 push	 ebx
  00062	55		 push	 ebp
  00063	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  00068	89 6c 24 28	 mov	 DWORD PTR _lx$[esp+44], ebp
  0006c	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte

; 271  : 		x ++;

  00071	83 c5 04	 add	 ebp, 4

; 272  : 
; 273  : 
; 274  : 		for (i = 0; i < 4; i++)

  00074	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR _i$[esp+24], 0
  0007c	89 6c 24 24	 mov	 DWORD PTR 12+[esp+24], ebp
  00080	8d 55 06	 lea	 edx, DWORD PTR [ebp+6]
  00083	89 54 24 24	 mov	 DWORD PTR 12+[esp+24], edx
$L52011:

; 275  : 		{
; 276  : 			if (VGF1_GetChanMasterVol(i))

  00087	8b 44 24 20	 mov	 eax, DWORD PTR _i$[esp+24]
  0008b	50		 push	 eax
  0008c	e8 00 00 00 00	 call	 _VGF1_GetChanMasterVol
  00091	83 c4 04	 add	 esp, 4
  00094	85 c0		 test	 eax, eax
  00096	74 40		 je	 SHORT $L52014

; 277  : 			{
; 278  : 				Wrt.WriteHexByte(x,   y+j, p[0], col);

  00098	0f be 0f	 movsx	 ecx, BYTE PTR [edi]
  0009b	56		 push	 esi
  0009c	51		 push	 ecx
  0009d	53		 push	 ebx
  0009e	55		 push	 ebp
  0009f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  000a4	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte

; 279  : 				Wrt.WriteHexByte(x+3, y+j, p[1], col);

  000a9	0f be 57 01	 movsx	 edx, BYTE PTR [edi+1]
  000ad	8b 44 24 24	 mov	 eax, DWORD PTR 12+[esp+24]
  000b1	56		 push	 esi
  000b2	52		 push	 edx
  000b3	83 c0 fd	 add	 eax, -3			; fffffffdH
  000b6	53		 push	 ebx
  000b7	50		 push	 eax
  000b8	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  000bd	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte

; 280  : 				Wrt.WriteHexByte(x+6, y+j, p[2], col);

  000c2	0f be 4f 02	 movsx	 ecx, BYTE PTR [edi+2]
  000c6	8b 54 24 24	 mov	 edx, DWORD PTR 12+[esp+24]
  000ca	56		 push	 esi
  000cb	51		 push	 ecx
  000cc	53		 push	 ebx
  000cd	52		 push	 edx
  000ce	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  000d3	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte
$L52014:

; 281  : 			}
; 282  : 
; 283  : 			p+=3;
; 284  : 			x+=10;

  000d8	8b 44 24 24	 mov	 eax, DWORD PTR 12+[esp+24]
  000dc	83 c7 03	 add	 edi, 3
  000df	83 c0 0a	 add	 eax, 10			; 0000000aH
  000e2	83 c5 0a	 add	 ebp, 10			; 0000000aH
  000e5	89 44 24 24	 mov	 DWORD PTR 12+[esp+24], eax
  000e9	8b 44 24 20	 mov	 eax, DWORD PTR _i$[esp+24]
  000ed	40		 inc	 eax
  000ee	83 f8 04	 cmp	 eax, 4
  000f1	89 44 24 20	 mov	 DWORD PTR _i$[esp+24], eax
  000f5	7c 90		 jl	 SHORT $L52011

; 285  : 		}
; 286  : 
; 287  : 		
; 288  : 		Wrt.WriteHexByte(x, y+j, *p++, col);

  000f7	0f be 07	 movsx	 eax, BYTE PTR [edi]
  000fa	56		 push	 esi
  000fb	50		 push	 eax
  000fc	53		 push	 ebx
  000fd	55		 push	 ebp
  000fe	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  00103	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte
  00108	8b 44 24 10	 mov	 eax, DWORD PTR _j$[esp+28]
  0010c	8b 4c 24 28	 mov	 ecx, DWORD PTR _rows$[esp+24]

; 289  : 
; 290  : 		x = lx;

  00110	8b 6c 24 18	 mov	 ebp, DWORD PTR _lx$[esp+28]

; 291  : 		p +=3;

  00114	83 c7 04	 add	 edi, 4
  00117	40		 inc	 eax
  00118	43		 inc	 ebx
  00119	3b c1		 cmp	 eax, ecx
  0011b	89 44 24 10	 mov	 DWORD PTR _j$[esp+28], eax
  0011f	0f 8c 22 ff ff
	ff		 jl	 $L52008
  00125	5e		 pop	 esi
  00126	5d		 pop	 ebp
  00127	5b		 pop	 ebx
$L52010:
  00128	5f		 pop	 edi

; 292  : 	}
; 293  : }

  00129	83 c4 0c	 add	 esp, 12			; 0000000cH
  0012c	c3		 ret	 0
?DrawSEQ@@YAXHHH@Z ENDP					; DrawSEQ
_TEXT	ENDS
PUBLIC	?DrawQUAD@@YAXHHHHH@Z				; DrawQUAD
;	COMDAT ?DrawQUAD@@YAXHHHHH@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_rows$ = 16
_dec$ = 20
_chn$ = 24
_j$ = 24
_spd$ = 24
?DrawQUAD@@YAXHHHHH@Z PROC NEAR				; DrawQUAD, COMDAT

; 300  : {

  00000	83 ec 08	 sub	 esp, 8
  00003	53		 push	 ebx
  00004	55		 push	 ebp
  00005	56		 push	 esi
  00006	57		 push	 edi

; 301  : int	 i,j,k,col;
; 302  : 
; 303  : SBYTE *p;
; 304  : SBYTE cnt;
; 305  : SBYTE val;
; 306  : SBYTE spd;
; 307  : 
; 308  : 
; 309  : 	if (!FC6_IsPlaying()) return;

  00007	e8 00 00 00 00	 call	 ?FC6_IsPlaying@@YAHXZ	; FC6_IsPlaying
  0000c	85 c0		 test	 eax, eax
  0000e	0f 84 3a 01 00
	00		 je	 $L52037

; 310  : 
; 311  : 	if (!VGF1_GetChanMasterVol(chn)) return;

  00014	8b 74 24 2c	 mov	 esi, DWORD PTR _chn$[esp+20]
  00018	56		 push	 esi
  00019	e8 00 00 00 00	 call	 _VGF1_GetChanMasterVol
  0001e	83 c4 04	 add	 esp, 4
  00021	85 c0		 test	 eax, eax
  00023	0f 84 25 01 00
	00		 je	 $L52037

; 312  : 
; 313  : 	if (dec)

  00029	8b 44 24 28	 mov	 eax, DWORD PTR _dec$[esp+20]

; 314  : 	{
; 315  : 		p   = Info.Chan[chn].VolPtr;
; 316  : 		cnt = Info.Chan[chn].VolOfs;
; 317  : 		val = Info.Chan[chn].VolOfsVal;

  0002d	8d 34 76	 lea	 esi, DWORD PTR [esi+esi*2]
  00030	85 c0		 test	 eax, eax
  00032	74 28		 je	 SHORT $L52032
  00034	8d 04 f6	 lea	 eax, DWORD PTR [esi+esi*8]
  00037	d1 e0		 shl	 eax, 1
  00039	8a 98 24 00 00
	00		 mov	 bl, BYTE PTR ?Info@@3UtagDataInfo@@A[eax+36]

; 318  : 		spd = Info.Chan[chn].VolOfsSpd;

  0003f	8a 88 28 00 00
	00		 mov	 cl, BYTE PTR ?Info@@3UtagDataInfo@@A[eax+40]

; 319  : 
; 320  : 		p -= 5; 

  00045	8b b0 1c 00 00
	00		 mov	 esi, DWORD PTR ?Info@@3UtagDataInfo@@A[eax+28]

; 321  : 		cnt += 5;

  0004b	8a 80 20 00 00
	00		 mov	 al, BYTE PTR ?Info@@3UtagDataInfo@@A[eax+32]
  00051	83 ee 05	 sub	 esi, 5
  00054	88 4c 24 2c	 mov	 BYTE PTR _spd$[esp+20], cl
  00058	04 05		 add	 al, 5

; 322  : 	} 
; 323  : 	else

  0005a	eb 21		 jmp	 SHORT $L52033
$L52032:

; 324  : 	{
; 325  : 		p   = Info.Chan[chn].FrqPtr;

  0005c	8d 0c f6	 lea	 ecx, DWORD PTR [esi+esi*8]
  0005f	d1 e1		 shl	 ecx, 1

; 326  : 		cnt = Info.Chan[chn].FrqOfs;
; 327  : 		val = Info.Chan[chn].FrqOfsVal;
; 328  : 		spd = Info.Chan[chn].FrqOfsSpd;

  00061	8a 91 38 00 00
	00		 mov	 dl, BYTE PTR ?Info@@3UtagDataInfo@@A[ecx+56]
  00067	8b b1 2c 00 00
	00		 mov	 esi, DWORD PTR ?Info@@3UtagDataInfo@@A[ecx+44]
  0006d	8a 81 30 00 00
	00		 mov	 al, BYTE PTR ?Info@@3UtagDataInfo@@A[ecx+48]
  00073	8a 99 34 00 00
	00		 mov	 bl, BYTE PTR ?Info@@3UtagDataInfo@@A[ecx+52]
  00079	88 54 24 2c	 mov	 BYTE PTR _spd$[esp+20], dl
$L52033:

; 329  : 	}
; 330  : 
; 331  : 	if (!p) return;

  0007d	85 f6		 test	 esi, esi
  0007f	0f 84 c9 00 00
	00		 je	 $L52037

; 332  : 
; 333  : //		if (dec) { p -= 5; cnt += 5; }
; 334  : 
; 335  : 
; 336  : 	Wrt.WriteHexByte(x ,y  , cnt, 0);

  00085	8b 6c 24 20	 mov	 ebp, DWORD PTR _y$[esp+20]
  00089	8b 7c 24 1c	 mov	 edi, DWORD PTR _x$[esp+20]
  0008d	0f be c0	 movsx	 eax, al
  00090	6a 00		 push	 0
  00092	50		 push	 eax
  00093	55		 push	 ebp
  00094	57		 push	 edi
  00095	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  0009a	89 44 24 20	 mov	 DWORD PTR -8+[esp+40], eax
  0009e	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte

; 337  : 	Wrt.WriteHexByte(x ,y+1, spd, 0);

  000a3	0f be 44 24 2c	 movsx	 eax, BYTE PTR _spd$[esp+20]
  000a8	6a 00		 push	 0
  000aa	8d 4d 01	 lea	 ecx, DWORD PTR [ebp+1]
  000ad	50		 push	 eax
  000ae	51		 push	 ecx
  000af	57		 push	 edi
  000b0	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  000b5	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte

; 338  : 	Wrt.WriteHexByte(x ,y+2, val, 0);

  000ba	0f be d3	 movsx	 edx, bl
  000bd	6a 00		 push	 0
  000bf	8d 45 02	 lea	 eax, DWORD PTR [ebp+2]
  000c2	52		 push	 edx
  000c3	50		 push	 eax
  000c4	57		 push	 edi
  000c5	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  000ca	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte

; 339  : 
; 340  : 	x += 4;
; 341  : 
; 342  : 	k = 0;
; 343  : 	for (j = 0; j < rows; j++)

  000cf	8b 44 24 24	 mov	 eax, DWORD PTR _rows$[esp+20]
  000d3	33 db		 xor	 ebx, ebx
  000d5	83 c7 04	 add	 edi, 4
  000d8	3b c3		 cmp	 eax, ebx
  000da	89 7c 24 1c	 mov	 DWORD PTR _x$[esp+20], edi
  000de	89 5c 24 2c	 mov	 DWORD PTR _j$[esp+20], ebx
  000e2	7e 6a		 jle	 SHORT $L52037
  000e4	eb 08		 jmp	 SHORT $L52035
$L52292:
  000e6	8b 7c 24 1c	 mov	 edi, DWORD PTR _x$[esp+20]
  000ea	8b 6c 24 20	 mov	 ebp, DWORD PTR _y$[esp+20]
$L52035:

; 352  : 
; 353  : 			Wrt.WriteHexByte(x+(i*3) ,y+j, *p++, col);

  000ee	8b 4c 24 2c	 mov	 ecx, DWORD PTR _j$[esp+20]
  000f2	03 cd		 add	 ecx, ebp
  000f4	bd 10 00 00 00	 mov	 ebp, 16			; 00000010H
  000f9	89 4c 24 14	 mov	 DWORD PTR -4+[esp+24], ecx
$L52038:
  000fd	8b 44 24 10	 mov	 eax, DWORD PTR -8+[esp+24]
  00101	33 c9		 xor	 ecx, ecx
  00103	3b d8		 cmp	 ebx, eax
  00105	75 07		 jne	 SHORT $L52041

; 344  : 	{
; 345  : 		for (i = 0; i < 16; i++)
; 346  : 		{
; 347  : 			col = 0;
; 348  : 
; 349  : 			if (k == cnt) col = 2;

  00107	b9 02 00 00 00	 mov	 ecx, 2

; 350  : 			else

  0010c	eb 12		 jmp	 SHORT $L52043
$L52041:

; 351  : 				if ((dec) && (k < 5)) col = 1;

  0010e	8b 44 24 28	 mov	 eax, DWORD PTR _dec$[esp+20]
  00112	85 c0		 test	 eax, eax
  00114	74 0a		 je	 SHORT $L52043
  00116	83 fb 05	 cmp	 ebx, 5
  00119	7d 05		 jge	 SHORT $L52043
  0011b	b9 01 00 00 00	 mov	 ecx, 1
$L52043:

; 352  : 
; 353  : 			Wrt.WriteHexByte(x+(i*3) ,y+j, *p++, col);

  00120	0f be 06	 movsx	 eax, BYTE PTR [esi]
  00123	8b 54 24 14	 mov	 edx, DWORD PTR -4+[esp+24]
  00127	51		 push	 ecx
  00128	50		 push	 eax
  00129	52		 push	 edx
  0012a	57		 push	 edi
  0012b	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  00130	46		 inc	 esi
  00131	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte

; 354  : 
; 355  : 			k++;

  00136	43		 inc	 ebx
  00137	83 c7 03	 add	 edi, 3
  0013a	4d		 dec	 ebp
  0013b	75 c0		 jne	 SHORT $L52038
  0013d	8b 44 24 2c	 mov	 eax, DWORD PTR _j$[esp+20]
  00141	8b 4c 24 24	 mov	 ecx, DWORD PTR _rows$[esp+20]
  00145	40		 inc	 eax
  00146	3b c1		 cmp	 eax, ecx
  00148	89 44 24 2c	 mov	 DWORD PTR _j$[esp+20], eax
  0014c	7c 98		 jl	 SHORT $L52292
$L52037:
  0014e	5f		 pop	 edi
  0014f	5e		 pop	 esi
  00150	5d		 pop	 ebp
  00151	5b		 pop	 ebx

; 356  : 		}
; 357  : 	}
; 358  : }

  00152	83 c4 08	 add	 esp, 8
  00155	c3		 ret	 0
?DrawQUAD@@YAXHHHHH@Z ENDP				; DrawQUAD
_TEXT	ENDS
PUBLIC	?DrawPAT@@YAXHHH@Z				; DrawPAT
;	COMDAT ?DrawPAT@@YAXHHH@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_chn$ = 16
_row$ = -4
?DrawPAT@@YAXHHH@Z PROC NEAR				; DrawPAT, COMDAT

; 364  : {

  00000	51		 push	 ecx

; 365  : int		j,c;
; 366  : int		row = Info.ActRow;

  00001	a1 00 00 00 00	 mov	 eax, DWORD PTR ?Info@@3UtagDataInfo@@A
  00006	56		 push	 esi

; 367  : SBYTE	*p = Info.Chan[chn].PatPtr;

  00007	8b 74 24 14	 mov	 esi, DWORD PTR _chn$[esp+4]
  0000b	89 44 24 04	 mov	 DWORD PTR _row$[esp+8], eax
  0000f	57		 push	 edi
  00010	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  00013	8d 0c c0	 lea	 ecx, DWORD PTR [eax+eax*8]
  00016	8b 3c 4d 18 00
	00 00		 mov	 edi, DWORD PTR ?Info@@3UtagDataInfo@@A[ecx*2+24]

; 368  : 
; 369  : 		if (!FC6_IsPlaying()) return;

  0001d	e8 00 00 00 00	 call	 ?FC6_IsPlaying@@YAHXZ	; FC6_IsPlaying
  00022	85 c0		 test	 eax, eax
  00024	74 62		 je	 SHORT $L52058

; 370  : 		if (!VGF1_GetChanMasterVol(chn)) return;

  00026	56		 push	 esi
  00027	e8 00 00 00 00	 call	 _VGF1_GetChanMasterVol
  0002c	83 c4 04	 add	 esp, 4
  0002f	85 c0		 test	 eax, eax
  00031	74 55		 je	 SHORT $L52058

; 371  : 
; 372  : 		if (!p) return;

  00033	85 ff		 test	 edi, edi
  00035	74 51		 je	 SHORT $L52058
  00037	53		 push	 ebx
  00038	55		 push	 ebp

; 373  : 
; 374  : 		for (j = 0; j < 32; j++)

  00039	33 f6		 xor	 esi, esi
$L52056:

; 375  : 		{
; 376  : 			c = (j == row) ? 2 : 0;

  0003b	8b 54 24 10	 mov	 edx, DWORD PTR _row$[esp+20]
  0003f	33 db		 xor	 ebx, ebx

; 377  : 
; 378  : 			Wrt.WriteHexByte(x  ,y+j,*p++, c);

  00041	0f be 07	 movsx	 eax, BYTE PTR [edi]
  00044	3b f2		 cmp	 esi, edx
  00046	8b 54 24 1c	 mov	 edx, DWORD PTR _y$[esp+16]
  0004a	0f 95 c3	 setne	 bl
  0004d	4b		 dec	 ebx
  0004e	8d 2c 16	 lea	 ebp, DWORD PTR [esi+edx]
  00051	83 e3 02	 and	 ebx, 2
  00054	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  00059	53		 push	 ebx
  0005a	50		 push	 eax
  0005b	8b 44 24 20	 mov	 eax, DWORD PTR _x$[esp+24]
  0005f	55		 push	 ebp
  00060	50		 push	 eax
  00061	47		 inc	 edi
  00062	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte

; 379  : 			Wrt.WriteHexByte(x+3,y+j,*p++, c);

  00067	0f be 07	 movsx	 eax, BYTE PTR [edi]
  0006a	8b 4c 24 18	 mov	 ecx, DWORD PTR _x$[esp+16]
  0006e	53		 push	 ebx
  0006f	50		 push	 eax
  00070	55		 push	 ebp
  00071	8d 41 03	 lea	 eax, DWORD PTR [ecx+3]
  00074	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  00079	50		 push	 eax
  0007a	47		 inc	 edi
  0007b	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte
  00080	46		 inc	 esi
  00081	83 fe 20	 cmp	 esi, 32			; 00000020H
  00084	7c b5		 jl	 SHORT $L52056
  00086	5d		 pop	 ebp
  00087	5b		 pop	 ebx
$L52058:
  00088	5f		 pop	 edi
  00089	5e		 pop	 esi

; 380  : 		}
; 381  : }

  0008a	59		 pop	 ecx
  0008b	c3		 ret	 0
?DrawPAT@@YAXHHH@Z ENDP					; DrawPAT
_TEXT	ENDS
PUBLIC	?DrawPER@@YAXHH@Z				; DrawPER
EXTRN	?WriteHexWord@TWriter4@@QAEXHHHH@Z:NEAR		; TWriter4::WriteHexWord
;	COMDAT ?DrawPER@@YAXHH@Z
_TEXT	SEGMENT
_x$ = 8
_y$ = 12
_i$ = -4
?DrawPER@@YAXHH@Z PROC NEAR				; DrawPER, COMDAT

; 387  : {

  00000	51		 push	 ecx

; 388  : int		i,v;
; 389  : 
; 390  : 
; 391  : 	if (!FC6_IsPlaying()) return;

  00001	e8 00 00 00 00	 call	 ?FC6_IsPlaying@@YAHXZ	; FC6_IsPlaying
  00006	85 c0		 test	 eax, eax
  00008	74 73		 je	 SHORT $L52068
  0000a	53		 push	 ebx
  0000b	55		 push	 ebp

; 392  : 		for (i = 0; i < 4; i++)

  0000c	8b 6c 24 14	 mov	 ebp, DWORD PTR _y$[esp+8]
  00010	56		 push	 esi
  00011	57		 push	 edi
  00012	8b 7c 24 18	 mov	 edi, DWORD PTR _x$[esp+16]
  00016	c7 44 24 10 00
	00 00 00	 mov	 DWORD PTR _i$[esp+20], 0
  0001e	bb 3c 00 00 00	 mov	 ebx, OFFSET FLAT:?Info@@3UtagDataInfo@@A+60
$L52066:

; 393  : 		{
; 394  : 			if (!VGF1_GetChanMasterVol(i)) continue;

  00023	8b 44 24 10	 mov	 eax, DWORD PTR _i$[esp+20]
  00027	50		 push	 eax
  00028	e8 00 00 00 00	 call	 _VGF1_GetChanMasterVol
  0002d	83 c4 04	 add	 esp, 4
  00030	85 c0		 test	 eax, eax
  00032	74 2e		 je	 SHORT $L52067

; 395  : 			v = Info.Chan[i].Period;

  00034	8b 33		 mov	 esi, DWORD PTR [ebx]

; 396  : 
; 397  : 			Wrt.WriteHexWord(x+(i*10),y  ,v >> 16, 0);

  00036	6a 00		 push	 0
  00038	8b ce		 mov	 ecx, esi
  0003a	c1 f9 10	 sar	 ecx, 16			; 00000010H
  0003d	51		 push	 ecx
  0003e	55		 push	 ebp
  0003f	57		 push	 edi
  00040	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  00045	e8 00 00 00 00	 call	 ?WriteHexWord@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexWord

; 398  : 			Wrt.WriteHexWord(x+(i*10),y+1,v & 0xFFFF, 0);

  0004a	81 e6 ff ff 00
	00		 and	 esi, 65535		; 0000ffffH
  00050	6a 00		 push	 0
  00052	8d 55 01	 lea	 edx, DWORD PTR [ebp+1]
  00055	56		 push	 esi
  00056	52		 push	 edx
  00057	57		 push	 edi
  00058	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  0005d	e8 00 00 00 00	 call	 ?WriteHexWord@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexWord
$L52067:
  00062	8b 74 24 10	 mov	 esi, DWORD PTR _i$[esp+20]
  00066	83 c3 36	 add	 ebx, 54			; 00000036H
  00069	46		 inc	 esi
  0006a	83 c7 0a	 add	 edi, 10			; 0000000aH
  0006d	81 fb 14 01 00
	00		 cmp	 ebx, OFFSET FLAT:?Info@@3UtagDataInfo@@A+276
  00073	89 74 24 10	 mov	 DWORD PTR _i$[esp+20], esi
  00077	7c aa		 jl	 SHORT $L52066
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	5d		 pop	 ebp
  0007c	5b		 pop	 ebx
$L52068:

; 399  : 		}
; 400  : }

  0007d	59		 pop	 ecx
  0007e	c3		 ret	 0
?DrawPER@@YAXHH@Z ENDP					; DrawPER
_TEXT	ENDS
PUBLIC	?DrawBUF@@YAXPACHHH@Z				; DrawBUF
;	COMDAT ?DrawBUF@@YAXPACHHH@Z
_TEXT	SEGMENT
_dst$ = 8
_w$ = 12
_x$ = 16
_y$ = 20
?DrawBUF@@YAXPACHHH@Z PROC NEAR				; DrawBUF, COMDAT

; 406  : {

  00000	56		 push	 esi

; 407  : int	i,j,val;
; 408  : SWORD *p = Info.MixBuffer;

  00001	8b 35 10 00 00
	00		 mov	 esi, DWORD PTR ?Info@@3UtagDataInfo@@A+16

; 409  : static wpos = 0;
; 410  : 
; 411  : 	if (!FC6_IsPlaying()) return;

  00007	e8 00 00 00 00	 call	 ?FC6_IsPlaying@@YAHXZ	; FC6_IsPlaying
  0000c	85 c0		 test	 eax, eax
  0000e	0f 84 9a 00 00
	00		 je	 $L52086

; 412  : 	if (!p) return;

  00014	85 f6		 test	 esi, esi
  00016	0f 84 92 00 00
	00		 je	 $L52086

; 413  : 
; 414  : 	p += (wpos*882*2);

  0001c	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _?wpos@?1??DrawBUF@@YAXPACHHH@Z@4HA
  00022	53		 push	 ebx
  00023	55		 push	 ebp
  00024	57		 push	 edi
  00025	8d 04 52	 lea	 eax, DWORD PTR [edx+edx*2]
  00028	8b 7c 24 18	 mov	 edi, DWORD PTR _w$[esp+12]
  0002c	c1 e0 04	 shl	 eax, 4
  0002f	03 c2		 add	 eax, edx

; 415  : 	wpos++; wpos &= 3;

  00031	42		 inc	 edx
  00032	83 e2 03	 and	 edx, 3
  00035	8d 04 c0	 lea	 eax, DWORD PTR [eax+eax*8]
  00038	89 15 00 00 00
	00		 mov	 DWORD PTR _?wpos@?1??DrawBUF@@YAXPACHHH@Z@4HA, edx
  0003e	8b 54 24 20	 mov	 edx, DWORD PTR _y$[esp+12]
  00042	8d 0c c6	 lea	 ecx, DWORD PTR [esi+eax*8]
  00045	8b 74 24 1c	 mov	 esi, DWORD PTR _x$[esp+12]

; 416  : 
; 417  : 	for (i = 0, j = 0; i < 300; i++, j+=4)

  00049	33 c0		 xor	 eax, eax
$L52084:

; 418  : 	{
; 419  : 		val = (p[j] >> 8) ^ 128;
; 420  : 		val = ((255 - val) & 0xFF) >> 2;
; 421  : 		dst[(x+i)+((y+val)*w)] = 2;

  0004b	66 8b 19	 mov	 bx, WORD PTR [ecx]
  0004e	83 cd ff	 or	 ebp, -1
  00051	c1 fb 08	 sar	 ebx, 8
  00054	81 f3 80 00 00
	00		 xor	 ebx, 128		; 00000080H
  0005a	83 c1 08	 add	 ecx, 8
  0005d	2b eb		 sub	 ebp, ebx
  0005f	8b 5c 24 14	 mov	 ebx, DWORD PTR _dst$[esp+12]
  00063	c1 fd 02	 sar	 ebp, 2
  00066	83 e5 3f	 and	 ebp, 63			; 0000003fH
  00069	03 ea		 add	 ebp, edx
  0006b	0f af ef	 imul	 ebp, edi
  0006e	03 e8		 add	 ebp, eax
  00070	03 eb		 add	 ebp, ebx
  00072	c6 04 2e 02	 mov	 BYTE PTR [esi+ebp], 2

; 422  : 
; 423  : 		val = (p[j+1] >> 8) ^ 128;
; 424  : 		val = ((255 - val) & 0xFF) >> 2;
; 425  : 		dst[(x+i+320)+((y+val)*w)] = 2;

  00076	66 8b 59 fa	 mov	 bx, WORD PTR [ecx-6]
  0007a	c1 fb 08	 sar	 ebx, 8
  0007d	81 f3 80 00 00
	00		 xor	 ebx, 128		; 00000080H
  00083	83 cd ff	 or	 ebp, -1
  00086	2b eb		 sub	 ebp, ebx
  00088	8b 5c 24 14	 mov	 ebx, DWORD PTR _dst$[esp+12]
  0008c	c1 fd 02	 sar	 ebp, 2
  0008f	83 e5 3f	 and	 ebp, 63			; 0000003fH
  00092	03 ea		 add	 ebp, edx
  00094	0f af ef	 imul	 ebp, edi
  00097	03 e8		 add	 ebp, eax
  00099	03 eb		 add	 ebp, ebx
  0009b	40		 inc	 eax
  0009c	3d 2c 01 00 00	 cmp	 eax, 300		; 0000012cH
  000a1	c6 84 2e 40 01
	00 00 02	 mov	 BYTE PTR [esi+ebp+320], 2
  000a9	7c a0		 jl	 SHORT $L52084
  000ab	5f		 pop	 edi
  000ac	5d		 pop	 ebp
  000ad	5b		 pop	 ebx
$L52086:
  000ae	5e		 pop	 esi

; 426  : 	}
; 427  : }

  000af	c3		 ret	 0
?DrawBUF@@YAXPACHHH@Z ENDP				; DrawBUF
_TEXT	ENDS
PUBLIC	?DrawSMP@@YAXPACHHHH@Z				; DrawSMP
EXTRN	_VGF1_Peek:NEAR
EXTRN	?WriteHexLongCut@TWriter4@@QAEXHHHH@Z:NEAR	; TWriter4::WriteHexLongCut
;	COMDAT ?DrawSMP@@YAXPACHHHH@Z
_TEXT	SEGMENT
_dst$ = 8
_w$ = 12
_x$ = 16
_y$ = 20
_chn$ = 24
_ofs$ = -8
_vol$ = -12
_pos$ = 24
_inc$ = -4
?DrawSMP@@YAXPACHHHH@Z PROC NEAR			; DrawSMP, COMDAT

; 433  : {

  00000	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00003	56		 push	 esi

; 434  : int	i,val;
; 435  : int	ofs = Info.Chan[chn].SampleOfs;

  00004	8b 74 24 24	 mov	 esi, DWORD PTR _chn$[esp+12]
  00008	57		 push	 edi
  00009	8d 04 76	 lea	 eax, DWORD PTR [esi+esi*2]
  0000c	8d 04 c0	 lea	 eax, DWORD PTR [eax+eax*8]
  0000f	d1 e0		 shl	 eax, 1
  00011	8b 88 42 00 00
	00		 mov	 ecx, DWORD PTR ?Info@@3UtagDataInfo@@A[eax+66]

; 436  : int	siz = Info.Chan[chn].SampleSiz;

  00017	8b b8 46 00 00
	00		 mov	 edi, DWORD PTR ?Info@@3UtagDataInfo@@A[eax+70]

; 437  : int	vol = (Info.Chan[chn].DevVolume > 64) ? 64 : Info.Chan[chn].DevVolume;

  0001d	8a 80 41 00 00
	00		 mov	 al, BYTE PTR ?Info@@3UtagDataInfo@@A[eax+65]
  00023	89 4c 24 0c	 mov	 DWORD PTR _ofs$[esp+20], ecx
  00027	3c 40		 cmp	 al, 64			; 00000040H
  00029	7e 0a		 jle	 SHORT $L52310
  0002b	c7 44 24 08 40
	00 00 00	 mov	 DWORD PTR _vol$[esp+20], 64 ; 00000040H
  00033	eb 07		 jmp	 SHORT $L52311
$L52310:
  00035	0f be d0	 movsx	 edx, al
  00038	89 54 24 08	 mov	 DWORD PTR _vol$[esp+20], edx
$L52311:

; 438  : int	pos,inc;
; 439  : 
; 440  : 	if (!FC6_IsPlaying()) return;

  0003c	e8 00 00 00 00	 call	 ?FC6_IsPlaying@@YAHXZ	; FC6_IsPlaying
  00041	85 c0		 test	 eax, eax
  00043	0f 84 2e 01 00
	00		 je	 $L52093

; 441  : 	if (!VGF1_GetChanMasterVol(chn)) return;

  00049	56		 push	 esi
  0004a	e8 00 00 00 00	 call	 _VGF1_GetChanMasterVol
  0004f	83 c4 04	 add	 esp, 4
  00052	85 c0		 test	 eax, eax
  00054	0f 84 1d 01 00
	00		 je	 $L52093

; 442  : 
; 443  : 	pos = 0;
; 444  : 	inc = (siz * 1024) / 64;

  0005a	8b c7		 mov	 eax, edi

; 455  : 		}
; 456  : 		dst[(x+i)+((y+6+val)*w)] = 5;

  0005c	8b 74 24 20	 mov	 esi, DWORD PTR _x$[esp+16]
  00060	c1 e0 0a	 shl	 eax, 10			; 0000000aH
  00063	99		 cdq
  00064	8b 7c 24 1c	 mov	 edi, DWORD PTR _w$[esp+16]
  00068	83 e2 3f	 and	 edx, 63			; 0000003fH
  0006b	53		 push	 ebx
  0006c	03 c2		 add	 eax, edx
  0006e	33 db		 xor	 ebx, ebx
  00070	55		 push	 ebp
  00071	8b 6c 24 20	 mov	 ebp, DWORD PTR _dst$[esp+24]
  00075	89 5c 24 30	 mov	 DWORD PTR _pos$[esp+24], ebx
  00079	c1 f8 06	 sar	 eax, 6
  0007c	89 44 24 18	 mov	 DWORD PTR _inc$[esp+28], eax
$L52103:
  00080	8b 44 24 30	 mov	 eax, DWORD PTR _pos$[esp+24]
  00084	99		 cdq
  00085	81 e2 ff 03 00
	00		 and	 edx, 1023		; 000003ffH
  0008b	03 c2		 add	 eax, edx
  0008d	8b 54 24 14	 mov	 edx, DWORD PTR _ofs$[esp+28]
  00091	c1 f8 0a	 sar	 eax, 10			; 0000000aH
  00094	03 c2		 add	 eax, edx
  00096	50		 push	 eax
  00097	e8 00 00 00 00	 call	 _VGF1_Peek
  0009c	0f be c0	 movsx	 eax, al
  0009f	0f af 44 24 14	 imul	 eax, DWORD PTR _vol$[esp+32]
  000a4	99		 cdq
  000a5	83 e2 3f	 and	 edx, 63			; 0000003fH
  000a8	83 c4 04	 add	 esp, 4
  000ab	03 c2		 add	 eax, edx
  000ad	8b c8		 mov	 ecx, eax
  000af	83 c8 ff	 or	 eax, -1
  000b2	c1 f9 06	 sar	 ecx, 6
  000b5	81 f1 80 00 00
	00		 xor	 ecx, 128		; 00000080H
  000bb	2b c1		 sub	 eax, ecx
  000bd	c1 f8 03	 sar	 eax, 3
  000c0	83 e0 1f	 and	 eax, 31			; 0000001fH
  000c3	f6 c3 03	 test	 bl, 3
  000c6	75 32		 jne	 SHORT $L52315
  000c8	8b 54 24 2c	 mov	 edx, DWORD PTR _y$[esp+24]
  000cc	8d 4a 06	 lea	 ecx, DWORD PTR [edx+6]
  000cf	0f af cf	 imul	 ecx, edi
  000d2	03 cb		 add	 ecx, ebx
  000d4	03 cd		 add	 ecx, ebp
  000d6	c6 04 31 03	 mov	 BYTE PTR [ecx+esi], 3
  000da	8b ca		 mov	 ecx, edx
  000dc	8d 51 15	 lea	 edx, DWORD PTR [ecx+21]
  000df	0f af d7	 imul	 edx, edi
  000e2	03 d3		 add	 edx, ebx
  000e4	03 d5		 add	 edx, ebp
  000e6	c6 04 32 03	 mov	 BYTE PTR [edx+esi], 3
  000ea	8d 51 25	 lea	 edx, DWORD PTR [ecx+37]
  000ed	0f af d7	 imul	 edx, edi
  000f0	03 d3		 add	 edx, ebx
  000f2	03 d5		 add	 edx, ebp
  000f4	c6 04 32 03	 mov	 BYTE PTR [edx+esi], 3
  000f8	eb 04		 jmp	 SHORT $L52106
$L52315:

; 445  : 
; 446  : 	for (i = 0; i < 64; i++)
; 447  : 	{
; 448  : 		val = ((VGF1_Peek((pos/1024)+ofs) * vol) / 64) ^ 128;
; 449  : 		val = ((255 - val) & 0xFF) / 8;
; 450  : 		if (!(i&3)) 
; 451  : 		{
; 452  : 			dst[(x+i)+((y+6+0)*w)] = 3;
; 453  : 			dst[(x+i)+((y+6+15)*w)] = 3;
; 454  : 			dst[(x+i)+((y+6+31)*w)] = 3;

  000fa	8b 4c 24 2c	 mov	 ecx, DWORD PTR _y$[esp+24]
$L52106:

; 455  : 		}
; 456  : 		dst[(x+i)+((y+6+val)*w)] = 5;

  000fe	83 c1 06	 add	 ecx, 6

; 457  : 		pos += inc;

  00101	8b 54 24 30	 mov	 edx, DWORD PTR _pos$[esp+24]
  00105	03 c8		 add	 ecx, eax
  00107	8b 44 24 18	 mov	 eax, DWORD PTR _inc$[esp+28]
  0010b	0f af cf	 imul	 ecx, edi
  0010e	03 cb		 add	 ecx, ebx
  00110	03 d0		 add	 edx, eax
  00112	03 cd		 add	 ecx, ebp
  00114	43		 inc	 ebx
  00115	83 fb 40	 cmp	 ebx, 64			; 00000040H
  00118	89 54 24 30	 mov	 DWORD PTR _pos$[esp+24], edx
  0011c	c6 04 31 05	 mov	 BYTE PTR [ecx+esi], 5
  00120	0f 8c 5a ff ff
	ff		 jl	 $L52103

; 458  : 	}
; 459  : 
; 460  : 	Wrt.WriteHexLongCut(x/4, y/6, ofs, 1);

  00126	b8 ab aa aa 2a	 mov	 eax, 715827883		; 2aaaaaabH
  0012b	6a 01		 push	 1
  0012d	f7 6c 24 30	 imul	 DWORD PTR _y$[esp+28]
  00131	8b ca		 mov	 ecx, edx
  00133	8b c6		 mov	 eax, esi
  00135	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  00138	03 d1		 add	 edx, ecx
  0013a	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  0013f	8b fa		 mov	 edi, edx
  00141	8b 54 24 18	 mov	 edx, DWORD PTR _ofs$[esp+32]
  00145	52		 push	 edx
  00146	57		 push	 edi
  00147	99		 cdq
  00148	83 e2 03	 and	 edx, 3
  0014b	03 c2		 add	 eax, edx
  0014d	c1 f8 02	 sar	 eax, 2
  00150	50		 push	 eax
  00151	e8 00 00 00 00	 call	 ?WriteHexLongCut@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexLongCut

; 461  : 	Wrt.WriteHexByte((x+56)/4, y/6, vol, 1);

  00156	8b 44 24 10	 mov	 eax, DWORD PTR _vol$[esp+28]
  0015a	6a 01		 push	 1
  0015c	50		 push	 eax
  0015d	8d 46 38	 lea	 eax, DWORD PTR [esi+56]
  00160	99		 cdq
  00161	83 e2 03	 and	 edx, 3
  00164	57		 push	 edi
  00165	03 c2		 add	 eax, edx
  00167	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  0016c	c1 f8 02	 sar	 eax, 2
  0016f	50		 push	 eax
  00170	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte
  00175	5d		 pop	 ebp
  00176	5b		 pop	 ebx
$L52093:
  00177	5f		 pop	 edi
  00178	5e		 pop	 esi

; 462  : }

  00179	83 c4 0c	 add	 esp, 12			; 0000000cH
  0017c	c3		 ret	 0
?DrawSMP@@YAXPACHHHH@Z ENDP				; DrawSMP
_TEXT	ENDS
PUBLIC	?DrawStress@@YAXXZ				; DrawStress
EXTRN	_VGF1_GetMixStress:NEAR
;	COMDAT ?DrawStress@@YAXXZ
_TEXT	SEGMENT
?DrawStress@@YAXXZ PROC NEAR				; DrawStress, COMDAT

; 469  : int val, ActStress;
; 470  : static	int StxMax = 0, StxMin = 0;
; 471  : static	int	LastStress = 0;
; 472  : 
; 473  : 	if (StressReset)

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?StressReset@@3HA ; StressReset
  00005	56		 push	 esi
  00006	57		 push	 edi
  00007	33 ff		 xor	 edi, edi
  00009	3b c7		 cmp	 eax, edi
  0000b	74 18		 je	 SHORT $L52118

; 474  : 	{
; 475  : 		StressReset = 0;

  0000d	89 3d 00 00 00
	00		 mov	 DWORD PTR ?StressReset@@3HA, edi ; StressReset

; 476  : 		StxMax = StxMin = ActStress = LastStress = 0;

  00013	89 3d 00 00 00
	00		 mov	 DWORD PTR _?LastStress@?1??DrawStress@@YAXXZ@4HA, edi
  00019	89 3d 00 00 00
	00		 mov	 DWORD PTR _?StxMin@?1??DrawStress@@YAXXZ@4HA, edi
  0001f	89 3d 00 00 00
	00		 mov	 DWORD PTR _?StxMax@?1??DrawStress@@YAXXZ@4HA, edi
$L52118:

; 477  : 	}
; 478  : 	
; 479  : 	ActStress = VGF1_GetMixStress();

  00025	e8 00 00 00 00	 call	 _VGF1_GetMixStress
  0002a	8b c8		 mov	 ecx, eax

; 480  : 	val = (ActStress + LastStress) / 2;

  0002c	a1 00 00 00 00	 mov	 eax, DWORD PTR _?LastStress@?1??DrawStress@@YAXXZ@4HA
  00031	03 c1		 add	 eax, ecx
  00033	99		 cdq
  00034	2b c2		 sub	 eax, edx
  00036	8b f0		 mov	 esi, eax

; 481  : 
; 482  : 	if (ActStress > StxMax) StxMax = ActStress;

  00038	a1 00 00 00 00	 mov	 eax, DWORD PTR _?StxMax@?1??DrawStress@@YAXXZ@4HA
  0003d	d1 fe		 sar	 esi, 1
  0003f	3b c8		 cmp	 ecx, eax
  00041	7e 06		 jle	 SHORT $L52119
  00043	89 0d 00 00 00
	00		 mov	 DWORD PTR _?StxMax@?1??DrawStress@@YAXXZ@4HA, ecx
$L52119:

; 483  : 
; 484  : 	if (StxMin == 0) StxMin = ActStress;

  00049	a1 00 00 00 00	 mov	 eax, DWORD PTR _?StxMin@?1??DrawStress@@YAXXZ@4HA
  0004e	3b c7		 cmp	 eax, edi

; 485  : 	else

  00050	74 04		 je	 SHORT $L52318

; 486  : 		if (ActStress < StxMin) StxMin = ActStress;

  00052	3b c8		 cmp	 ecx, eax
  00054	7d 06		 jge	 SHORT $L52122
$L52318:
  00056	89 0d 00 00 00
	00		 mov	 DWORD PTR _?StxMin@?1??DrawStress@@YAXXZ@4HA, ecx
$L52122:

; 487  : 
; 488  : 	Wrt.WriteHexWord(0,0, ActStress, 0);

  0005c	57		 push	 edi
  0005d	51		 push	 ecx
  0005e	57		 push	 edi
  0005f	57		 push	 edi
  00060	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  00065	e8 00 00 00 00	 call	 ?WriteHexWord@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexWord

; 489  : 	Wrt.WriteHexWord(5,0, val, 0);

  0006a	57		 push	 edi
  0006b	56		 push	 esi
  0006c	57		 push	 edi
  0006d	6a 05		 push	 5
  0006f	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  00074	e8 00 00 00 00	 call	 ?WriteHexWord@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexWord

; 490  : 	Wrt.WriteHexWord(12,0, StxMin, 0);

  00079	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR _?StxMin@?1??DrawStress@@YAXXZ@4HA
  0007f	57		 push	 edi
  00080	51		 push	 ecx
  00081	57		 push	 edi
  00082	6a 0c		 push	 12			; 0000000cH
  00084	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  00089	e8 00 00 00 00	 call	 ?WriteHexWord@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexWord

; 491  : 	Wrt.WriteHexWord(17,0, StxMax, 0);

  0008e	8b 15 00 00 00
	00		 mov	 edx, DWORD PTR _?StxMax@?1??DrawStress@@YAXXZ@4HA
  00094	57		 push	 edi
  00095	52		 push	 edx
  00096	57		 push	 edi
  00097	6a 11		 push	 17			; 00000011H
  00099	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  0009e	e8 00 00 00 00	 call	 ?WriteHexWord@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexWord
  000a3	5f		 pop	 edi
  000a4	5e		 pop	 esi

; 492  : 
; 493  : 
; 494  : }

  000a5	c3		 ret	 0
?DrawStress@@YAXXZ ENDP					; DrawStress
_TEXT	ENDS
EXTRN	_VGF1_GetActiveChannels:NEAR
EXTRN	_DOut_GetBufferWritePos:NEAR
EXTRN	_DOut_GetBufferPlayPos:NEAR
EXTRN	?FC6_PutInfo@@YAXPAUtagDataInfo@@@Z:NEAR	; FC6_PutInfo
EXTRN	?SetDest@TWriter4@@QAEXPACHH@Z:NEAR		; TWriter4::SetDest
EXTRN	?WriteFloat@TWriter4@@QAEXHHMH@Z:NEAR		; TWriter4::WriteFloat
;	COMDAT ?RunOnce@@YAXPACHH@Z
_TEXT	SEGMENT
_Dst$ = 8
_Width$ = 12
_Height$ = 16
?RunOnce@@YAXPACHH@Z PROC NEAR				; RunOnce, COMDAT

; 501  : int yOffs = 5;
; 502  : 
; 503  : 	if (!FC6_IsPlaying()) return;

  00000	e8 00 00 00 00	 call	 ?FC6_IsPlaying@@YAHXZ	; FC6_IsPlaying
  00005	85 c0		 test	 eax, eax
  00007	0f 84 a6 01 00
	00		 je	 $L52127
  0000d	56		 push	 esi
  0000e	57		 push	 edi

; 504  : 	FC6_PutInfo(&Info);

  0000f	68 00 00 00 00	 push	 OFFSET FLAT:?Info@@3UtagDataInfo@@A ; Info
  00014	e8 00 00 00 00	 call	 ?FC6_PutInfo@@YAXPAUtagDataInfo@@@Z ; FC6_PutInfo

; 505  : 
; 506  : 	Wrt.SetDest((SBYTE*)Dst,Width,Height);

  00019	8b 44 24 18	 mov	 eax, DWORD PTR _Height$[esp+8]
  0001d	8b 74 24 14	 mov	 esi, DWORD PTR _Width$[esp+8]
  00021	8b 7c 24 10	 mov	 edi, DWORD PTR _Dst$[esp+8]
  00025	83 c4 04	 add	 esp, 4
  00028	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  0002d	50		 push	 eax
  0002e	56		 push	 esi
  0002f	57		 push	 edi
  00030	e8 00 00 00 00	 call	 ?SetDest@TWriter4@@QAEXPACHH@Z ; TWriter4::SetDest

; 507  : 
; 508  : 
; 509  : 	DrawStress();

  00035	e8 00 00 00 00	 call	 ?DrawStress@@YAXXZ	; DrawStress

; 510  : 
; 511  : 	Wrt.WriteHexWord(0,1, VGF1_GetActiveChannels(),0);

  0003a	6a 00		 push	 0
  0003c	e8 00 00 00 00	 call	 _VGF1_GetActiveChannels
  00041	50		 push	 eax
  00042	6a 01		 push	 1
  00044	6a 00		 push	 0
  00046	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  0004b	e8 00 00 00 00	 call	 ?WriteHexWord@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexWord

; 512  : 
; 513  : 	Wrt.WriteHexByte(0,3, DOut_GetBufferPlayPos(),0);

  00050	6a 00		 push	 0
  00052	e8 00 00 00 00	 call	 _DOut_GetBufferPlayPos
  00057	50		 push	 eax
  00058	6a 03		 push	 3
  0005a	6a 00		 push	 0
  0005c	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  00061	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte

; 514  : 	Wrt.WriteHexByte(0,4, DOut_GetBufferWritePos(),0);

  00066	6a 00		 push	 0
  00068	e8 00 00 00 00	 call	 _DOut_GetBufferWritePos
  0006d	50		 push	 eax
  0006e	6a 04		 push	 4
  00070	6a 00		 push	 0
  00072	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  00077	e8 00 00 00 00	 call	 ?WriteHexByte@TWriter4@@QAEXHHHH@Z ; TWriter4::WriteHexByte

; 515  : 	Wrt.WriteFloat(0,5, cpuMS,0);

  0007c	8b 0d 00 00 00
	00		 mov	 ecx, DWORD PTR ?cpuMS@@3MA
  00082	6a 00		 push	 0
  00084	51		 push	 ecx
  00085	6a 05		 push	 5
  00087	6a 00		 push	 0
  00089	b9 00 00 00 00	 mov	 ecx, OFFSET FLAT:?Wrt@@3VTWriter4@@A
  0008e	e8 00 00 00 00	 call	 ?WriteFloat@TWriter4@@QAEXHHMH@Z ; TWriter4::WriteFloat

; 516  : 
; 517  : 	DrawPAT(20,yOffs + 12,0);

  00093	6a 00		 push	 0
  00095	6a 11		 push	 17			; 00000011H
  00097	6a 14		 push	 20			; 00000014H
  00099	e8 00 00 00 00	 call	 ?DrawPAT@@YAXHHH@Z	; DrawPAT

; 518  : 	DrawPAT(30,yOffs + 12,1);

  0009e	6a 01		 push	 1
  000a0	6a 11		 push	 17			; 00000011H
  000a2	6a 1e		 push	 30			; 0000001eH
  000a4	e8 00 00 00 00	 call	 ?DrawPAT@@YAXHHH@Z	; DrawPAT

; 519  : 	DrawPAT(40,yOffs + 12,2);

  000a9	6a 02		 push	 2
  000ab	6a 11		 push	 17			; 00000011H
  000ad	6a 28		 push	 40			; 00000028H
  000af	e8 00 00 00 00	 call	 ?DrawPAT@@YAXHHH@Z	; DrawPAT

; 520  : 	DrawPAT(50,yOffs + 12,3);

  000b4	6a 03		 push	 3
  000b6	6a 11		 push	 17			; 00000011H
  000b8	6a 32		 push	 50			; 00000032H
  000ba	e8 00 00 00 00	 call	 ?DrawPAT@@YAXHHH@Z	; DrawPAT

; 521  : 
; 522  : 
; 523  : 	DrawQUAD(100,yOffs + 0, 4,1, 0);

  000bf	6a 00		 push	 0
  000c1	6a 01		 push	 1
  000c3	6a 04		 push	 4
  000c5	6a 05		 push	 5
  000c7	6a 64		 push	 100			; 00000064H
  000c9	e8 00 00 00 00	 call	 ?DrawQUAD@@YAXHHHHH@Z	; DrawQUAD
  000ce	83 c4 44	 add	 esp, 68			; 00000044H

; 524  : 	DrawQUAD(100,yOffs + 5, 4,0, 0);

  000d1	6a 00		 push	 0
  000d3	6a 00		 push	 0
  000d5	6a 04		 push	 4
  000d7	6a 0a		 push	 10			; 0000000aH
  000d9	6a 64		 push	 100			; 00000064H
  000db	e8 00 00 00 00	 call	 ?DrawQUAD@@YAXHHHHH@Z	; DrawQUAD

; 525  : 
; 526  : 	DrawQUAD(100,yOffs +15, 4,1, 1);

  000e0	6a 01		 push	 1
  000e2	6a 01		 push	 1
  000e4	6a 04		 push	 4
  000e6	6a 14		 push	 20			; 00000014H
  000e8	6a 64		 push	 100			; 00000064H
  000ea	e8 00 00 00 00	 call	 ?DrawQUAD@@YAXHHHHH@Z	; DrawQUAD

; 527  : 	DrawQUAD(100,yOffs +20, 4,0, 1);

  000ef	6a 01		 push	 1
  000f1	6a 00		 push	 0
  000f3	6a 04		 push	 4
  000f5	6a 19		 push	 25			; 00000019H
  000f7	6a 64		 push	 100			; 00000064H
  000f9	e8 00 00 00 00	 call	 ?DrawQUAD@@YAXHHHHH@Z	; DrawQUAD

; 528  : 	
; 529  : 	DrawQUAD(100,yOffs +30, 4,1, 2);

  000fe	6a 02		 push	 2
  00100	6a 01		 push	 1
  00102	6a 04		 push	 4
  00104	6a 23		 push	 35			; 00000023H
  00106	6a 64		 push	 100			; 00000064H
  00108	e8 00 00 00 00	 call	 ?DrawQUAD@@YAXHHHHH@Z	; DrawQUAD
  0010d	83 c4 50	 add	 esp, 80			; 00000050H

; 530  : 	DrawQUAD(100,yOffs +35, 4,0, 2);

  00110	6a 02		 push	 2
  00112	6a 00		 push	 0
  00114	6a 04		 push	 4
  00116	6a 28		 push	 40			; 00000028H
  00118	6a 64		 push	 100			; 00000064H
  0011a	e8 00 00 00 00	 call	 ?DrawQUAD@@YAXHHHHH@Z	; DrawQUAD

; 531  : 
; 532  : 	DrawQUAD(100,yOffs +45, 4,1, 3);

  0011f	6a 03		 push	 3
  00121	6a 01		 push	 1
  00123	6a 04		 push	 4
  00125	6a 32		 push	 50			; 00000032H
  00127	6a 64		 push	 100			; 00000064H
  00129	e8 00 00 00 00	 call	 ?DrawQUAD@@YAXHHHHH@Z	; DrawQUAD

; 533  : 	DrawQUAD(100,yOffs +50, 4,0, 3);

  0012e	6a 03		 push	 3
  00130	6a 00		 push	 0
  00132	6a 04		 push	 4
  00134	6a 37		 push	 55			; 00000037H
  00136	6a 64		 push	 100			; 00000064H
  00138	e8 00 00 00 00	 call	 ?DrawQUAD@@YAXHHHHH@Z	; DrawQUAD

; 534  : 
; 535  : 	DrawSEQ(16, yOffs + 0, 7);

  0013d	6a 07		 push	 7
  0013f	6a 05		 push	 5
  00141	6a 10		 push	 16			; 00000010H
  00143	e8 00 00 00 00	 call	 ?DrawSEQ@@YAXHHH@Z	; DrawSEQ
  00148	83 c4 48	 add	 esp, 72			; 00000048H

; 536  : 	DrawPER(20, yOffs + 8);

  0014b	6a 0d		 push	 13			; 0000000dH
  0014d	6a 14		 push	 20			; 00000014H
  0014f	e8 00 00 00 00	 call	 ?DrawPER@@YAXHH@Z	; DrawPER

; 537  : 
; 538  : 	DrawBUF((SBYTE*)Dst+8, Width, 0, 400);

  00154	68 90 01 00 00	 push	 400			; 00000190H
  00159	6a 00		 push	 0
  0015b	8d 57 08	 lea	 edx, DWORD PTR [edi+8]
  0015e	56		 push	 esi
  0015f	52		 push	 edx
  00160	e8 00 00 00 00	 call	 ?DrawBUF@@YAXPACHHH@Z	; DrawBUF

; 539  : 
; 540  : 
; 541  : 	DrawSMP((SBYTE*)Dst, Width, 328, 32+yOffs + (6*0),  0);

  00165	6a 00		 push	 0
  00167	6a 25		 push	 37			; 00000025H
  00169	68 48 01 00 00	 push	 328			; 00000148H
  0016e	56		 push	 esi
  0016f	57		 push	 edi
  00170	e8 00 00 00 00	 call	 ?DrawSMP@@YAXPACHHHH@Z	; DrawSMP

; 542  : 	DrawSMP((SBYTE*)Dst, Width, 328, 32+yOffs + (6*15), 1);

  00175	6a 01		 push	 1
  00177	6a 7f		 push	 127			; 0000007fH
  00179	68 48 01 00 00	 push	 328			; 00000148H
  0017e	56		 push	 esi
  0017f	57		 push	 edi
  00180	e8 00 00 00 00	 call	 ?DrawSMP@@YAXPACHHHH@Z	; DrawSMP
  00185	83 c4 40	 add	 esp, 64			; 00000040H

; 543  : 	DrawSMP((SBYTE*)Dst, Width, 328, 32+yOffs + (6*30), 2);

  00188	6a 02		 push	 2
  0018a	68 d9 00 00 00	 push	 217			; 000000d9H
  0018f	68 48 01 00 00	 push	 328			; 00000148H
  00194	56		 push	 esi
  00195	57		 push	 edi
  00196	e8 00 00 00 00	 call	 ?DrawSMP@@YAXPACHHHH@Z	; DrawSMP

; 544  : 	DrawSMP((SBYTE*)Dst, Width, 328, 32+yOffs + (6*45), 3);

  0019b	6a 03		 push	 3
  0019d	68 33 01 00 00	 push	 307			; 00000133H
  001a2	68 48 01 00 00	 push	 328			; 00000148H
  001a7	56		 push	 esi
  001a8	57		 push	 edi
  001a9	e8 00 00 00 00	 call	 ?DrawSMP@@YAXPACHHHH@Z	; DrawSMP
  001ae	83 c4 28	 add	 esp, 40			; 00000028H
  001b1	5f		 pop	 edi
  001b2	5e		 pop	 esi
$L52127:

; 545  : }

  001b3	c3		 ret	 0
?RunOnce@@YAXPACHH@Z ENDP				; RunOnce
_TEXT	ENDS
END
