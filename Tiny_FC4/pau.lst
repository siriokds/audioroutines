     1                                  ; SAMPLE PRECISION:	32:32
     2                                  ; MIXER  PRECISION:	32bit with LINEAR INTERPOLATION
     3                                  
     4                                  ;============
     5                                  SECTION .bss
     6                                  ;============
     7                                  
     8                                  ;********** V O L U M E ************
     9                                  ; X of 64
    10                                  
    11                                  PAU_MASTERVOL	equ 50		
    12                                  
    13                                  ;************* P A N ***************
    14                                  ; Left		Right
    15                                  ; 000h <------> 0FFh
    16                                  
    17                                  PAU_PAN1	equ 0FFh
    18                                  PAU_PAN2	equ 000h
    19                                  PAU_PAN3	equ 000h
    20                                  PAU_PAN4	equ 0FFh
    21                                  
    22                                  ;***********************************
    23                                  
    24                                  
    25                                  PAU_MIXFREQ	equ 44100
    26                                  PAU_NUMCHN	equ 4					; 4 Channels
    27                                  PAU_MAXVOL	equ 64
    28                                  
    29                                  PAU_CLOCK	equ 3546895 ; PAL (NTSC = 3579545)	; Paula Master Clock
    30                                  PAU_BUFFLEN	equ 882
    31                                  
    32                                  PAU_MSAMPLESIZ	equ 8					; MIX: 32bit,Stereo = 8bytes x Sample
    33                                  PAU_MBUFFSIZ	equ (PAU_BUFFLEN*PAU_MSAMPLESIZ)
    34                                  
    35                                  PAU_SAMPLESIZ	equ 4					; OUT: 16bit,Stereo = 4bytes x Sample
    36                                  PAU_BUFFSIZ	equ (PAU_BUFFLEN*PAU_SAMPLESIZ)
    37                                  
    38                                  
    39                                  
    40                                  
    41                                  struc KMixChn
    42 00000000 <res 00000004>          	.Active		resd 1
    43 00000004 <res 00000004>          	.VoiceN		resd 1
    44                                  	
    45 00000008 <res 00000004>          	.VolL		resd 1
    46 0000000C <res 00000004>          	.VolR		resd 1
    47 00000010 <res 00000004>          	.Volume		resd 1
    48 00000014 <res 00000004>          	.Pan		resd 1
    49                                  
    50 00000018 <res 00000004>          	.SamplePos	resd 1
    51 0000001C <res 00000004>          	.SampleLen	resd 1
    52 00000020 <res 00000004>          	.SamplePos_i	resd 1
    53 00000024 <res 00000004>          	.SampleLen_i	resd 1
    54                                  
    55 00000028 <res 00000004>          	.Freq		resd 1
    56 0000002C <res 00000004>          	.PosIndex_I	resd 1
    57 00000030 <res 00000004>          	.PosIndex_F	resd 1
    58 00000034 <res 00000004>          	.PosIncr_I	resd 1
    59                                  	
    60 00000038 <res 00000004>          	.PosIncr_F	resd 1
    61 0000003C <res 00000004>          	.PosLimit	resd 1	
    62                                  
    63                                  	.size
    64                                  endstruc
    65                                  
    66                                  
    67 00000000 <res 00000004>          Opened		resd 1
    68 00000004 <res 00000004>          Playing		resd 1
    69 00000008 <res 00000004>          Callback	resd 1
    70 0000000C <res 00000004>          MixPtr		resd 1
    71                                  
    72 00000010 <res 00000100>          MixChn		resb (PAU_NUMCHN * KMixChn.size)
    73 00000110 <res 00000010>          nullDATA	resb 16
    74                                  align 16, resb 1
    75 00000120 <res 000089D0>          MixBuf		resb (PAU_BUFFSIZ*10)	; 8820
    76                                  align 16, resb 1
    77 00008AF0 <res 00001B90>          TmpBuf		resb PAU_MBUFFSIZ
    78 0000A680 <res 00000004>          ActiveVoice	resd 1
    79                                  allSize		equ $-Opened
    80                                  
    81                                  
    82                                  
    83                                  extern	_DOut_Open@8
    84                                  extern	_DOut_Start@0
    85                                  extern	_DOut_Close@0
    86                                  extern	_DOut_BufferCopy@4
    87                                  
    88                                  global	_paulaOpen@8
    89                                  global	_paulaStart@0
    90                                  global	_paulaClose@0
    91                                  global	_paulaReset@0
    92                                  
    93                                  global	_paulaSelectVoice@4
    94                                  global	_paulaSetPeriod@4
    95                                  global	_paulaSetVolume@4
    96                                  global	_paulaSetSamplePos@4
    97                                  global	_paulaSetSampleLen@4
    98                                  global	_paulaSetVoice@4
    99                                  ;global	_paulaDMACON@4
   100                                  
   101                                  
   102                                  
   103                                  ;============
   104                                  SECTION .code
   105                                  ;============
   106                                  
   107                                  
   108 00000000 FF0000000000000000-     _chMix_Pan	dd PAU_PAN1, PAU_PAN2, PAU_PAN3, PAU_PAN4
   109 00000009 000000FF000000     
   110                                  
   111                                  
   112                                  align 4
   113                                  ;----------------------------------
   114                                  _paulaOpen@8:
   115                                  ;----------------------------------
   116 00000010 55                      	push	ebp
   117 00000011 89E5                    	mov	ebp,esp
   118 00000013 60                      	pushad
   119                                  	
   120 00000014 E85B000000              	call	_paulaReset@0
   121                                  
   122 00000019 8B4508                  	mov	eax,[ebp+8]		; Play Routine
   123 0000001C A3[08000000]            	mov	[Callback],eax
   124                                  	
   125 00000021 8B450C                  	mov	eax,[ebp+12]		; HWnd
   126 00000024 50                      	push	eax
   127 00000025 8D05[60030000]          	lea	eax,[_paulaCallback]
   128 0000002B 50                      	push	eax
   129 0000002C E8(00000000)            	call	_DOut_Open@8
   130 00000031 09C0                    	or	eax,eax
   131 00000033 7506                    	jnz	.exit
   132                                  
   133 00000035 40                      	inc	eax	
   134 00000036 A3[00000000]            	mov	[Opened],eax
   135                                  
   136                                  .exit:
   137 0000003B 61                      	popad
   138 0000003C 5D                      	pop	ebp
   139 0000003D C20800                  	ret	8h
   140                                  
   141                                  
   142                                  align 4
   143                                  ;----------------------------------
   144                                  _paulaStart@0:
   145                                  ;----------------------------------
   146 00000040 31C0                    	xor	eax,eax
   147 00000042 3905[00000000]          	cmp	[Opened],eax
   148 00000048 7501                    	jnz	.okrun
   149 0000004A C3                      	ret
   150                                  .okrun:
   151 0000004B 60                      	pushad
   152                                  
   153 0000004C 40                      	inc	eax
   154 0000004D A3[04000000]            	mov	[Playing],eax
   155 00000052 E8(00000000)            	call	_DOut_Start@0
   156                                  	
   157 00000057 61                      	popad
   158 00000058 C3                      	ret
   159                                  
   160                                  
   161 00000059 90<rept>                align 4
   162                                  ;----------------------------------
   163                                  _paulaClose@0:
   164                                  ;----------------------------------
   165 0000005C 31C0                    	xor	eax,eax
   166 0000005E 3905[00000000]          	cmp	[Opened],eax
   167 00000064 7501                    	jnz	.okrun
   168 00000066 C3                      	ret
   169                                  .okrun:
   170 00000067 60                      	pushad
   171                                  
   172 00000068 A3[04000000]            	mov	[Playing],eax
   173 0000006D E8(00000000)            	call	_DOut_Close@0
   174                                  
   175 00000072 61                      	popad
   176 00000073 C3                      	ret
   177                                  
   178                                  
   179                                  
   180                                  align 4
   181                                  ;----------------------------------
   182                                  _paulaReset@0:
   183                                  ;----------------------------------
   184 00000074 60                      	pushad
   185                                  
   186                                  ; init voice
   187 00000075 8D3D[00000000]          	lea	edi,[Opened]
   188 0000007B B984A60000              	mov	ecx,allSize
   189 00000080 31C0                    	xor	eax,eax
   190 00000082 FC                      	cld
   191 00000083 F3AA                    	rep	stosb
   192                                  
   193 00000085 8D35[00000000]          	lea	esi,[_chMix_Pan]
   194 0000008B 8D3D[10000000]          	lea	edi,[MixChn]
   195 00000091 8D05[10010000]          	lea	eax,[nullDATA]
   196 00000097 66B90004                	mov	cx,0400h
   197                                  .inich:	
   198 0000009B 884F04                  	mov	[edi + KMixChn.VoiceN],cl
   199 0000009E 894718                  	mov	[edi + KMixChn.SamplePos],eax
   200 000000A1 894720                  	mov	[edi + KMixChn.SamplePos_i],eax
   201 000000A4 8B1E                    	mov	ebx,[esi]
   202 000000A6 895F14                  	mov	[edi + KMixChn.Pan],ebx
   203                                  	
   204 000000A9 81C604000000            	add	esi,4
   205 000000AF 81C740000000            	add	edi,KMixChn.size
   206 000000B5 FEC1                    	inc	cl
   207 000000B7 38E9                    	cmp	cl,ch
   208 000000B9 7CE0                    	jl	.inich
   209                                  	
   210 000000BB 61                      	popad
   211 000000BC C3                      	ret
   212                                  
   213                                  
   214                                  
   215 000000BD 90<rept>                align 4
   216                                  ; in: eax = chnNum, out: ebx = chnPtr
   217                                  ;----------------------------------
   218                                  _SetChnAddr:
   219                                  ;----------------------------------
   220 000000C0 50                      	push	eax
   221 000000C1 51                      	push	ecx
   222                                  	
   223 000000C2 A1[80A60000]            	mov	eax,[ActiveVoice]	
   224 000000C7 2503000000              	and	eax,3
   225 000000CC B940000000              	mov	ecx,KMixChn.size
   226 000000D1 F7E1                    	mul	ecx
   227 000000D3 8D1D[10000000]          	lea	ebx,[MixChn]
   228 000000D9 01C3                    	add	ebx,eax
   229                                  	
   230 000000DB 59                      	pop	ecx
   231 000000DC 58                      	pop	eax
   232 000000DD C3                      	ret
   233                                  
   234                                  
   235 000000DE 90<rept>                align 4
   236                                  ;----------------------------------
   237                                  _paulaSelectVoice@4:
   238                                  ;----------------------------------
   239 000000E0 55                      	push	ebp
   240 000000E1 89E5                    	mov	ebp,esp
   241 000000E3 50                      	push	eax
   242                                  
   243 000000E4 8B4508                  	mov	eax,[ebp+8]
   244 000000E7 2403                    	and	al,3
   245 000000E9 A2[80A60000]            	mov	byte [ActiveVoice],al
   246                                  
   247 000000EE 58                      	pop	eax
   248 000000EF 5D                      	pop	ebp
   249 000000F0 C20400                  	ret	4h
   250                                  
   251 000000F3 90                      align 4
   252                                  ;----------------------------------
   253                                  _paulaSetPeriod@4:
   254                                  ;----------------------------------
   255 000000F4 55                      	push	ebp
   256 000000F5 89E5                    	mov	ebp,esp
   257 000000F7 60                      	pushad
   258                                  
   259                                  	
   260 000000F8 E8C3FFFFFF              	call	_SetChnAddr	
   261 000000FD 31C9                    	xor	ecx,ecx
   262                                  
   263 000000FF 8B4508                  	mov	eax,[ebp+8]		; Get Period
   264 00000102 25FFFF0000              	and	eax,0000FFFFh
   265 00000107 7507                    	jnz	.noZ
   266                                  	
   267 00000109 890B                    	mov	[ebx + KMixChn.Active],ecx
   268 0000010B E92A000000              	jmp	.exit
   269                                  .noZ:
   270 00000110 66BE4000                	mov	si,0040h
   271 00000114 6639F0                  	cmp	ax,si
   272 00000117 7D03                    	jge	.noadjL
   273 00000119 6689F0                  	mov	ax,si
   274                                  .noadjL:
   275 0000011C 66BE006B                	mov	si,6B00h
   276 00000120 6639F0                  	cmp	ax,si
   277 00000123 7E03                    	jle	.noadjU
   278 00000125 6689F0                  	mov	ax,si
   279                                  .noadjU:
   280 00000128 09C0                    	or	eax,eax
   281 0000012A 740E                    	jz	.exit
   282                                  	
   283 0000012C 89C1                    	mov	ecx,eax
   284 0000012E B80F1F3600              	mov	eax,PAU_CLOCK
   285 00000133 31D2                    	xor	edx,edx
   286 00000135 F7F9                    	idiv	ecx
   287                                  
   288 00000137 894328                  	mov	[ebx + KMixChn.Freq],eax
   289                                  .exit:
   290 0000013A 61                      	popad
   291 0000013B 5D                      	pop	ebp
   292 0000013C C20400                  	ret	4h
   293                                  	
   294                                  	
   295                                  
   296 0000013F 90                      align 4
   297                                  ;----------------------------------
   298                                  _paulaSetVolume@4:
   299                                  ;----------------------------------
   300 00000140 55                      	push	ebp
   301 00000141 89E5                    	mov	ebp,esp
   302 00000143 60                      	pushad
   303                                  
   304 00000144 E877FFFFFF              	call	_SetChnAddr	
   305                                  
   306 00000149 0FB64508                	movzx	eax,byte [ebp+8]	; Get Volume
   307                                  	
   308 0000014D B13F                    	mov	cl,PAU_MAXVOL-1
   309 0000014F 38C8                    	cmp	al,cl
   310 00000151 7602                    	jbe	.noadjU
   311 00000153 88C8                    	mov	al,cl
   312                                  .noadjU:
   313 00000155 894310                  	mov	[ebx + KMixChn.Volume],eax
   314                                  
   315 00000158 61                      	popad
   316 00000159 5D                      	pop	ebp
   317 0000015A C20400                  	ret	4h
   318                                  
   319                                  
   320 0000015D 90<rept>                align 4
   321                                  ;----------------------------------
   322                                  _paulaSetSamplePos@4:
   323                                  ;----------------------------------
   324 00000160 55                      	push	ebp
   325 00000161 89E5                    	mov	ebp,esp
   326 00000163 60                      	pushad
   327                                  	
   328 00000164 E857FFFFFF              	call	_SetChnAddr	
   329                                  
   330 00000169 8B4508                  	mov	eax,[ebp+8]			; Get Sample Address
   331                                  
   332 0000016C 09C0                    	or	eax,eax
   333 0000016E 7403                    	jz	.exit
   334 00000170 894318                  	mov	[ebx + KMixChn.SamplePos],eax
   335                                  .exit:	
   336 00000173 61                      	popad
   337 00000174 5D                      	pop	ebp
   338 00000175 C20400                  	ret	4h
   339                                  	
   340                                  align 4
   341                                  ;----------------------------------
   342                                  _paulaSetSampleLen@4:
   343                                  ;----------------------------------
   344 00000178 55                      	push	ebp
   345 00000179 89E5                    	mov	ebp,esp
   346 0000017B 60                      	pushad
   347                                  
   348 0000017C E83FFFFFFF              	call	_SetChnAddr	
   349                                  
   350 00000181 31C9                    	xor	ecx,ecx
   351                                  	
   352 00000183 8B4508                  	mov	eax,[ebp+8]		; Get Len
   353 00000186 39C8                    	cmp	eax,ecx
   354 00000188 7707                    	ja	.noStopV
   355 0000018A 890B                    	mov	[ebx + KMixChn.Active],ecx
   356 0000018C E905000000              	jmp	.exit
   357                                  .noStopV:
   358 00000191 01C0                    	add	eax,eax
   359 00000193 89431C                  	mov	[ebx + KMixChn.SampleLen],eax
   360                                  .exit:
   361 00000196 61                      	popad
   362 00000197 5D                      	pop	ebp
   363 00000198 C20400                  	ret	4h
   364                                  	
   365                                  
   366                                  
   367                                  
   368 0000019B 90                      align 4
   369                                  ;----------------------------------
   370                                  _paulaSetVoice@4:
   371                                  ;----------------------------------
   372 0000019C 55                      	push	ebp
   373 0000019D 89E5                    	mov	ebp,esp
   374 0000019F 60                      	pushad
   375                                  
   376 000001A0 E81BFFFFFF              	call	_SetChnAddr	
   377                                  
   378 000001A5 31C9                    	xor	ecx,ecx
   379 000001A7 8B4508                  	mov	eax,[ebp+8]		; Get ON/OFF
   380 000001AA 09C0                    	or	eax,eax
   381 000001AC 7507                    	jnz	.PlayVoice
   382                                  .StopVoice:
   383 000001AE 890B                    	mov	[ebx + KMixChn.Active],ecx
   384 000001B0 E919000000              	jmp	.exit
   385                                  .PlayVoice:
   386 000001B5 894B2C                  	mov	[ebx + KMixChn.PosIndex_I],ecx
   387 000001B8 894B30                  	mov	[ebx + KMixChn.PosIndex_F],ecx
   388                                  
   389 000001BB 8B4318                  	mov	eax,[ebx + KMixChn.SamplePos]
   390 000001BE 894320                  	mov	[ebx + KMixChn.SamplePos_i],eax
   391                                  
   392 000001C1 8B431C                  	mov	eax,[ebx + KMixChn.SampleLen]
   393 000001C4 894324                  	mov	[ebx + KMixChn.SampleLen_i],eax
   394                                  
   395 000001C7 41                      	inc	ecx
   396 000001C8 890B                    	mov	[ebx + KMixChn.Active],ecx
   397                                  	
   398 000001CA 09C0                    	or	eax,eax
   399 000001CC 74E0                    	jz	.StopVoice
   400                                  .exit:
   401 000001CE 61                      	popad
   402 000001CF 5D                      	pop	ebp
   403 000001D0 C20400                  	ret	4h
   404                                  
   405                                  
   406                                  
   407                                  
   408                                  
   409                                  
   410                                  ;align 4
   411                                  ;----------------------------------
   412                                  ;_paulaDMACON@4:
   413                                  ;----------------------------------
   414                                  ;	push	ebp
   415                                  ;	mov	ebp,esp
   416                                  ;	pushad
   417                                  
   418                                  ;	mov	eax,[ActiveVoice]
   419                                  ;	push	eax
   420                                  
   421                                  ;	mov	eax,[ebp+8]		; get amigaWord
   422                                  ;	mov	edi,eax
   423                                  
   424                                  ;	xor	ecx,ecx
   425                                  ;.PLayVoice:	
   426                                  ;	push	ecx
   427                                  ;	call	_paulaSelectVoice@4
   428                                  	
   429                                  ;	test	ax,1
   430                                  ;	jz	.noSTop
   431                                  ;	push	edi
   432                                  ;	call	_paulaSetVoice@4
   433                                  ;.noSTop:	
   434                                  ;	shr	ax,1
   435                                  ;	inc	cl
   436                                  ;	cmp	cl,4
   437                                  ;	jl	.PLayVoice
   438                                  
   439                                  
   440                                  ;	pop	eax
   441                                  ;	mov	[ActiveVoice],eax
   442                                  
   443                                  ;	popad
   444                                  ;	pop	ebp
   445                                  ;	ret	4h
   446                                  
   447                                  
   448                                  
   449                                  
   450                                  
   451 000001D3 90                      align 4
   452                                  ;---------------------------------------
   453                                  ; in: ebp = chnPtr
   454                                  _asmMix16StereoNormal:
   455                                  ;---------------------------------------
   456 000001D4 60                      	pushad
   457 000001D5 E906000000              	jmp	.ChkActive
   458                                  .Deactivate:
   459 000001DA C6450000                	mov	byte [ebp + KMixChn.Active],0
   460                                  .ExitMix:
   461 000001DE 61                      	popad
   462 000001DF C3                      	ret
   463                                  .ChkActive:	
   464 000001E0 31C0                    	xor	eax,eax
   465 000001E2 384500                  	cmp	[ebp + KMixChn.Active],al
   466 000001E5 74F7                    	jz	.ExitMix
   467 000001E7 394510                  	cmp	[ebp + KMixChn.Volume],eax
   468 000001EA 74F2                    	jz	.ExitMix
   469 000001EC 394524                  	cmp	[ebp + KMixChn.SampleLen_i],eax
   470 000001EF 74ED                    	jz	.ExitMix
   471 000001F1 394528                  	cmp	[ebp + KMixChn.Freq],eax
   472 000001F4 74E8                    	jz	.ExitMix
   473                                  	
   474                                  ;------- Source & Destination ----
   475                                  
   476 000001F6 8B7520                  	mov	esi,[ebp + KMixChn.SamplePos_i]
   477 000001F9 8D3D[F08A0000]          	lea	edi,[TmpBuf]
   478                                  
   479                                  ;----------- Get Position Increment ---
   480                                  
   481 000001FF B944AC0000              	mov	ecx,PAU_MIXFREQ
   482 00000204 8B4528                  	mov	eax,[ebp + KMixChn.Freq]
   483 00000207 31D2                    	xor	edx,edx
   484 00000209 F7F1                    	div	ecx
   485 0000020B 894534                  	mov	[ebp + KMixChn.PosIncr_I],eax
   486 0000020E 31C0                    	xor	eax,eax
   487 00000210 F7F1                    	div	ecx
   488 00000212 894538                  	mov	[ebp + KMixChn.PosIncr_F],eax
   489                                  	
   490                                  ;----------- Get Volume ---
   491                                  
   492 00000215 8B4D10                  	mov	ecx,[ebp + KMixChn.Volume]
   493                                  
   494 00000218 B832000000              	mov	eax,PAU_MASTERVOL
   495 0000021D F7E9                    	imul	ecx
   496 0000021F C1F805                  	sar	eax,5
   497 00000222 89C1                    	mov	ecx,eax
   498                                  
   499 00000224 89C8                    	mov	eax,ecx
   500 00000226 8B5D14                  	mov	ebx,[ebp + KMixChn.Pan]
   501 00000229 0FAFC3                  	imul	eax,ebx
   502 0000022C C1E008                  	shl	eax,8
   503 0000022F 894508                  	mov	[ebp + KMixChn.VolL],eax
   504                                  
   505 00000232 89C8                    	mov	eax,ecx
   506 00000234 8B5D14                  	mov	ebx,[ebp + KMixChn.Pan]
   507 00000237 81F3FF000000            	xor	ebx,0FFh
   508 0000023D 0FAFC3                  	imul	eax,ebx
   509 00000240 C1E008                  	shl	eax,8
   510 00000243 89450C                  	mov	[ebp + KMixChn.VolR],eax
   511                                  
   512                                  ;----------- Number of samples ---
   513                                  
   514 00000246 B972030000              	mov	ecx,PAU_BUFFLEN
   515                                  
   516                                  
   517                                  ;----------- Get Sample Values ---
   518                                  
   519 0000024B 8B4524                  	mov	eax,[ebp + KMixChn.SampleLen_i]
   520 0000024E 3D03000000              	cmp	eax,3
   521 00000253 7C85                    	jl	.Deactivate
   522 00000255 89453C                  	mov	[ebp + KMixChn.PosLimit],eax
   523                                  
   524 00000258 E92F000000              	jmp	.ChkLup
   525                                  .Gate1:
   526 0000025D E978FFFFFF              	jmp	.Deactivate
   527 00000262 90<rept>                	align	16
   528                                  .Looped:
   529 00000270 8B453C                  	mov	eax,[ebp + KMixChn.PosLimit]
   530 00000273 8B5D18                  	mov	ebx,[ebp + KMixChn.SamplePos]
   531 00000276 29452C                  	sub	[ebp + KMixChn.PosIndex_I],eax
   532 00000279 895D20                  	mov	[ebp + KMixChn.SamplePos_i],ebx
   533                                  
   534 0000027C 8B451C                  	mov	eax,[ebp + KMixChn.SampleLen]
   535 0000027F 3D03000000              	cmp	eax,3
   536 00000284 7CD7                    	jl	.Gate1
   537                                  
   538 00000286 894524                  	mov	[ebp + KMixChn.SampleLen_i],eax
   539 00000289 89453C                  	mov	[ebp + KMixChn.PosLimit],eax
   540                                  
   541                                  .ChkLup:
   542 0000028C 8B5D2C                  	mov	ebx,[ebp + KMixChn.PosIndex_I]
   543                                  	
   544 0000028F 3B5D3C                  	cmp	ebx,[ebp + KMixChn.PosLimit]
   545 00000292 7DDC                    	jge	.Looped
   546                                  
   547 00000294 51                      	push	ecx
   548                                  
   549 00000295 8B4D30                  	mov	ecx,[ebp + KMixChn.PosIndex_F]		; 1
   550 00000298 0FBE141E                	movsx	edx,byte [esi+ebx]			; -
   551 0000029C 0FBE441E01              	movsx	eax,byte [esi+ebx+1]			; 2
   552 000002A1 C1E912                  	shr	ecx,18					; -
   553 000002A4 29D0                    	sub	eax,edx					; 3
   554 000002A6 0FAFC1                  	imul	eax,ecx					; 13
   555 000002A9 C1F810                  	sar	eax,16					; 14
   556 000002AC 01C2                    	add	edx,eax					; 15
   557 000002AE 89D0                    	mov	eax,edx					; 16
   558                                  
   559                                  
   560 000002B0 0FAF5508                	imul	edx,[ebp + KMixChn.VolL]		; 26
   561 000002B4 0117                    	add	[edi],edx				; 27
   562                                  
   563 000002B6 0FAF450C                	imul	eax,[ebp + KMixChn.VolR]		; 37
   564 000002BA 014704                  	add	[edi+(PAU_MSAMPLESIZ/2)],eax		; 38
   565                                  
   566                                  
   567 000002BD 8B4D30                  	mov	ecx,[ebp + KMixChn.PosIndex_F]		; 39
   568 000002C0 8B452C                  	mov	eax,[ebp + KMixChn.PosIndex_I]		; -
   569                                  
   570 000002C3 034D38                  	add	ecx,[ebp + KMixChn.PosIncr_F]		; 40
   571 000002C6 134534                  	adc	eax,[ebp + KMixChn.PosIncr_I]		; -
   572                                  
   573 000002C9 894D30                  	mov	[ebp + KMixChn.PosIndex_F],ecx		; 41
   574 000002CC 89452C                  	mov	[ebp + KMixChn.PosIndex_I],eax		; -
   575                                  
   576                                  
   577 000002CF 81C708000000            	add	edi,PAU_MSAMPLESIZ			; 42
   578                                  
   579 000002D5 59                      	pop	ecx					; 43
   580 000002D6 49                      	dec	ecx					; 44
   581 000002D7 75B3                    	jnz	.ChkLup					; -
   582                                  	
   583 000002D9 61                      	popad
   584 000002DA C3                      	ret
   585                                  	
   586                                  
   587                                  
   588 000002DB 90                      align 4
   589                                  ;-----------------------------------------------------------------------
   590                                  _MixBuffer:
   591                                  ;-----------------------------------------------------------------------
   592 000002DC 60                      	pushad
   593                                  	
   594                                  	; 1) Clear Buffer
   595 000002DD 8D3D[F08A0000]          	lea	edi,[TmpBuf]
   596 000002E3 B9E4060000              	mov	ecx,PAU_MBUFFSIZ/4
   597 000002E8 31C0                    	xor	eax,eax
   598 000002EA FC                      	cld
   599 000002EB F3AB                    	rep	stosd
   600                                  
   601                                  	; 2) Call PlayRoutine
   602 000002ED A1[08000000]            	mov	eax,[Callback]
   603 000002F2 09C0                    	or	eax,eax
   604 000002F4 7404                    	jz	.NoCall
   605 000002F6 60                      	pushad
   606 000002F7 FFD0                    	call	eax
   607 000002F9 61                      	popad
   608                                  .NoCall:
   609                                  
   610 000002FA 8D2D[10000000]          	lea	ebp,[MixChn]
   611 00000300 E8CFFEFFFF              	call	_asmMix16StereoNormal
   612                                  
   613 00000305 81C540000000            	add	ebp,KMixChn.size
   614 0000030B E8C4FEFFFF              	call	_asmMix16StereoNormal
   615                                  
   616 00000310 81C540000000            	add	ebp,KMixChn.size
   617 00000316 E8B9FEFFFF              	call	_asmMix16StereoNormal
   618                                  
   619 0000031B 81C540000000            	add	ebp,KMixChn.size
   620 00000321 E8AEFEFFFF              	call	_asmMix16StereoNormal
   621                                  
   622                                  
   623 00000326 61                      	popad
   624 00000327 C3                      	ret
   625                                  	
   626                                  
   627                                  align 4
   628                                  ;-----------------------------------------------------------------------
   629                                  _Conv32to16:
   630                                  ;-----------------------------------------------------------------------
   631 00000328 60                      	pushad
   632 00000329 8D35[F08A0000]          	lea	esi,[TmpBuf]
   633 0000032F 8B3D[0C000000]          	mov	edi,[MixPtr]
   634 00000335 B972030000              	mov	ecx,PAU_BUFFLEN
   635                                  .C32to16:
   636 0000033A 8B06                    	mov	eax,[esi]			; Read L	; 1
   637 0000033C 8B5604                  	mov	edx,[esi+(PAU_MSAMPLESIZ/2)]	; Read R	; -
   638 0000033F C1F810                  	sar	eax,16				; Conv L	; 2
   639 00000342 C1FA10                  	sar	edx,16				; Conv R	; -
   640 00000345 668907                  	mov	[edi],ax			; Write L	; 3
   641 00000348 66895702                	mov	[edi+(PAU_SAMPLESIZ/2)],dx	; Write R	; -
   642                                  	
   643 0000034C 81C608000000            	add	esi,PAU_MSAMPLESIZ				; 4
   644 00000352 81C704000000            	add	edi,PAU_SAMPLESIZ				; -
   645 00000358 49                      	dec	ecx						; 5
   646 00000359 75DF                    	jnz	.C32to16					; 6
   647                                  
   648 0000035B 61                      	popad
   649 0000035C C3                      	ret
   650                                  
   651                                  
   652                                  
   653                                  ;-----------------------------------------------------------------------
   654                                  ;_FirMemory:
   655                                  ;-----------------------------------------------------------------------
   656                                  ;	pushad
   657                                  ;	lea	edi,[TmpBuf]
   658                                  ;	add	edi,PAU_MSAMPLESIZ
   659                                  ;	mov	si,2
   660                                  ;.firs:
   661                                  ;	push	edi
   662                                  ;	mov	ecx,PAU_BUFFLEN-1
   663                                  ;.fir1:
   664                                  ;	mov	edx, [edi-PAU_MSAMPLESIZ]
   665                                  ;	mov	eax, [edi]
   666                                  ;	mov	ebx, [edi+PAU_MSAMPLESIZ]
   667                                  ;	sar	edx,2
   668                                  ;	sar	eax,1
   669                                  ;	sar	ebx,2
   670                                  ;	add	eax,edx
   671                                  ;	add	eax,ebx
   672                                  ;	mov	[edi],eax
   673                                  ;	add	edi,PAU_MSAMPLESIZ
   674                                  ;	loop	.fir1
   675                                  ;	pop	edi
   676                                  ;	add	edi,PAU_MSAMPLESIZ/2
   677                                  ;	dec	si
   678                                  ;	jnz	.firs
   679                                  ;	popad
   680                                  ;	ret
   681                                  
   682                                  
   683                                  
   684 0000035D 90<rept>                align 4
   685                                  ;-----------------------------------------------------------------------
   686                                  _paulaCallback:
   687                                  ;-----------------------------------------------------------------------
   688 00000360 803D[00000000]00        	cmp	byte [Opened],0
   689 00000367 7501                    	jnz	.okrun
   690 00000369 C3                      	ret
   691                                  .okrun:
   692 0000036A 60                      	pushad
   693                                  
   694 0000036B 8D05[20010000]          	lea	eax,[MixBuf]
   695 00000371 A3[0C000000]            	mov	[MixPtr],eax
   696                                  	
   697 00000376 B90A000000              	mov	ecx,10
   698                                  .MixAll10:
   699                                  
   700 0000037B E85CFFFFFF              	call	_MixBuffer
   701                                  
   702                                  ;	call	_FirMemory
   703                                  
   704 00000380 E8A3FFFFFF              	call	_Conv32to16
   705                                  	
   706 00000385 8105[0C000000]C80D-     	add	dword [MixPtr],PAU_BUFFSIZ
   707 0000038D 0000               
   708 0000038F E2EA                    	loop	.MixAll10
   709                                  
   710                                  
   711                                  
   712 00000391 8D05[20010000]          	lea	eax,[MixBuf]
   713 00000397 50                      	push	eax
   714 00000398 E8(00000000)            	call	_DOut_BufferCopy@4
   715                                  		
   716 0000039D 61                      	popad		
   717 0000039E C3                      	ret
   718                                  
   719                                  
   720                                  
   721                                  
